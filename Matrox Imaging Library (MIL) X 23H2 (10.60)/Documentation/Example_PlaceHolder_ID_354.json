[{
  "id": "Example_PlaceHolder_ID",
  "version": "2024020714",
  "title": "Example_PlaceHolder_Title",
  "wordCount": 0,
  "subEntries": [
    {
      "id": "Examples_DistributedMIL_General_DMILSyncAsync_CPP_DMILSyncAsyncSlave_dmilsyncasyncslave_cpp",
      "version": "2024020714",
      "title": "dmilsyncasyncslave.cpp",
      "location": "Sample Code from MIL Examples",
      "text": " Top /*****************************************************************************************/ /* * File name: DMILSyncAsyncSlave.cpp * Location: See Matrox Example Launcher in the MIL Control Center * * * Synopsis: This example shows how to use the MIL Function Development module to * create custom synchronous and asynchronous MIL functions. * * It contains the SlaveSynchronousFunction() and SlaveAsynchronousFunction() * slave functions. * * Copyright (C) Matrox Electronic Systems Ltd., 1992-2024. * All Rights Reserved */ #include &lt;mil.h&gt; /* Slave MIL Function prototypes. */ #ifdef __cplusplus extern \"C\" { #endif void MFTYPE SlaveSynchronousFunction(MIL_ID Func); void MFTYPE SlaveAsynchronousFunction(MIL_ID Func); #ifdef __cplusplus } #endif /* Slave Synchronous MIL Function definition. */ /* ------------------------------------------ */ void MFTYPE SlaveSynchronousFunction(MIL_ID Func) { MIL_ID SrcImage, DstImage; MIL_INT Option, *ReturnValuePtr, ValueToReturn = M_NULL; /* Read the parameters including pointer to the ReturnValue data. */ MfuncParamValue(Func, 1, &amp;SrcImage); MfuncParamValue(Func, 2, &amp;DstImage); MfuncParamValue(Func, 3, &amp;Option); MfuncParamValue(Func, 4, &amp;ReturnValuePtr); /* Do the processing and calculate the value to return. */ // ValueToReturn = ... /* Write the return value. */ *ReturnValuePtr = ValueToReturn; } /* Slave Asynchronous MIL Function definition. */ /* ------------------------------------------- */ void MFTYPE SlaveAsynchronousFunction(MIL_ID Func) { MIL_ID SrcImage, DstImage; MIL_INT Option; /* Read the parameters including pointer to the ReturnValue data. */ MfuncParamValue(Func, 1, &amp;SrcImage); MfuncParamValue(Func, 2, &amp;DstImage); MfuncParamValue(Func, 3, &amp;Option); /* Do the processing. */ //... } ",
      "wordCount": 214
    }
  ]
}]