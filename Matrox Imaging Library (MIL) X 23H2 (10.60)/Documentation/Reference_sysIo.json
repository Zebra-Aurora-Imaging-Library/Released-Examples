[{
  "id": "Reference_sysIo",
  "version": "2024020714",
  "title": "sysIo",
  "subTitles": null,
  "location": "MIL Reference",
  "pageURL": "content\\Reference\\sysIo\\ModuleInformation.htm",
  "text": " MsysIo functions Synopsis The functions prefixed with MsysIo make up the I/O sub-module of the System module. This sub-module allows the allocation and control of an I/O command list. Functions MsysIoAlloc MsysIoCommandRegister MsysIoControl MsysIoFree MsysIoInquire ",
  "wordCount": 37,
  "subEntries": [
    {
      "id": "Reference_sysIo_MsysIoAlloc",
      "version": null,
      "title": "MsysIoAlloc",
      "subTitles": null,
      "location": "MIL Reference",
      "pageURL": "content\\Reference\\sysIo\\MsysIoAlloc.htm",
      "text": " MsysIoAlloc Synopsis Allocate a MIL I/O command list. Syntax MIL_ID MsysIoAlloc( MIL_ID&nbsp;SysId, //in MIL_INT64&nbsp;IoCmdListNum, //in MIL_INT64&nbsp;Type, //in MIL_INT64&nbsp;CounterSrc, //in MIL_ID&nbsp;*IoCmdListSysIdPtr //out ) Description This function allocates a MIL I/O command list and initializes it. An I/O command list allows you to schedule commands to change the state of a bit of an I/O command register at a specified time or counter value. You can route the state of the bit, for example, to an auxiliary output signal to control a connected device at a required moment. To schedule commands, the I/O command list uses an internal counter to count clock ticks or transitions that occur on a signal specified as the counter source. When allocating an I/O command list, you must specify the counter source that will be used to schedule commands. The counter source can be either a clock, which allows you to schedule commands in time, or a specified signal, which allows you to schedule commands based on the number of transitions that occur on the signal. The latter case allows you to schedule commands, for example, based on the positional information provided by the output signal of a rotary decoder. To schedule commands with the I/O command list, use MsysIoCommandRegister(). To modify or inquire I/O command list settings, use MsysIoControl() and MsysIoInquire(). After allocating the MIL I/O command list, you should check if the operation was successful, using MappGetError() or by verifying that the MIL I/O command list identifier returned is not M_NULL (or nullptr if M_UNIQUE_ID was specified). When the MIL I/O command list is no longer required, release it using MsysIoFree() unless M_UNIQUE_ID was specified during allocation; if M_UNIQUE_ID was specified, the smart identifier manages the MIL I/O command list's lifetime and you must not manually free it. [Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. Parameters Parameters SysId Specifies the identifier of the MIL system on which to allocate the I/O command list. For specifying the system Value Description MIL system-specifictooltip (‡) M_DEFAULT_HOST Specifies the default Host system of the current MIL application. ‡ MIL system identifier Specifies a valid system identifier, previously allocated using MsysAlloc(). ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ IoCmdListNum Specifies the index of the I/O command list to allocate. Note that you cannot allocate a command list with the same index as one that has already been allocated. This parameter can be set to one of the following values: For specifying the I/O command list's index Value Description MIL system-specifictooltip (‡) M_DEFAULT Same as M_IO_COMMAND_LIST1. ‡ M_IO_COMMAND_LIST1 Allocates the first I/O command list. ‡ M_IO_COMMAND_LIST2 Allocates the second I/O command list. ‡ Type Specifies the type of I/O command list to allocate. This parameter can be set to the following value: For specifying the type of I/O command list Value Description MIL system-specifictooltip (‡) M_IO_COMMAND_LIST Specifies a general I/O command list. ‡ CounterSrc Specifies the signal to use as the counter source. The counter source will affect the units that you should use to specify, for example, when a registered command should be executed (MsysIoCommandRegister()). This parameter can be set to one of the following values: For specifying the counter source Value Description MIL system-specifictooltip (‡) M_DEFAULT Same as M_CLOCK. ‡ M_AUX_IOn Specifies to use auxiliary input signal n as the counter source, where n is the number for one of the auxiliary input signals. When specifying this counter source, schedule commands in terms of number of transitions that occur on the input signal. To change which signal transition will increment the counter, use MsysIoControl() with M_IO_COMMAND_COUNTER_ACTIVATION (by default, it is set to low-to-high transitions). ‡ MIL system specific [This is only applicable to Zebra 4Sight] For Zebra 4Sight EV6/EV7, n can be a value from 8 to 15. ‡ For the Matrox Indio, n can be a value from 8 to 15. ‡ For the Matrox Concord PoE, n can be a value from 2 to 7. ‡ For the Matrox Iris GTX, n can be a value from 3 to 6. ‡ M_CLOCK Specifies to use your hardware's clock signal as a counter source. When specifying this counter source, schedule commands in terms of seconds. The specified number of seconds will be internally converted to the same units as the clock. To inquire the frequency of the clock signal, use MsysIoInquire() with M_CLOCK_FREQUENCY. ‡ M_ROTARY_ENCODERn Specifies to use the output of rotary decoder n as the counter source, where n is the number of the rotary decoder. When specifying this counter source, schedule commands in terms of number of transitions that occur on the rotary decoder's output signal (MsysControl() with M_ROTARY_ENCODER_OUTPUT_MODE). ‡ MIL system specific [This is only applicable to Zebra 4Sight] For Zebra 4Sight EV6/EV7, n can be either 1 or 2. ‡ For the Matrox Iris GTX, n must be 1. ‡ For the Matrox Concord PoE, n can be either 1 or 2. ‡ For the Matrox Indio, n can be either 1 or 2. ‡ IoCmdListSysIdPtr Specifies the address of the variable in which to write the I/O command list identifier or specifies the data type that the function should use to return the I/O command list identifier. For retrieving the identifier or specifying how to return it Value Description MIL system-specifictooltip (‡) M_NULL Specifies that you will use this function's return value to obtain the identifier of the allocated I/O command list ; in this case, a standard MIL identifier of type MIL_ID is returned. ‡ M_UNIQUE_ID Specifies that you will use this function's return value to obtain the identifier of the allocated I/O command list ; in this case, a MIL smart identifier of type MIL_UNIQUE_SYSIO_ID is returned instead of a standard MIL identifier. This setting is only available when using C++11 (or later). A MIL smart identifier manages the lifespan of the MIL object it owns (similar to a std::unique_ptr). Note, you can use a MIL smart identifier as though it were a standard MIL identifier, except that you cannot use it to manually free the I/O command list (it is freed automatically). For more information, see the MIL smart identifiers subsection of the MIL custom data types, void pointers, extensions, and portability functions section of Chapter 2: Building an application. ‡ Address in which to write the identifier Specifies the address of a MIL_ID in which to write the identifier of the allocated I/O command list. If allocation fails, M_NULL is written as the identifier. ‡ Return value The returned value is the I/O command list identifier either as a standard identifier (MIL_ID) or a smart identifier (MIL_UNIQUE_SYSIO_ID). If allocation fails, M_NULL is returned (or nullptr if M_UNIQUE_ID was specified). Compilation information Header Include mil.h. Library Use mil.lib. DLL Requires mil.dll. Syntax Description Parameters - SysId For specifying the system - IoCmdListNum For specifying the I/O command list's index - Type For specifying the type of I/O command list - CounterSrc For specifying the counter source - IoCmdListSysIdPtr For retrieving the identifier or specifying how to return it Return value Compilation information M_AUX_IOn M_ROTARY_ENCODERn ",
      "wordCount": 1216,
      "subEntries": []
    },
    {
      "id": "Reference_sysIo_MsysIoCommandRegister",
      "version": null,
      "title": "MsysIoCommandRegister",
      "subTitles": null,
      "location": "MIL Reference",
      "pageURL": "content\\Reference\\sysIo\\MsysIoCommandRegister.htm",
      "text": " MsysIoCommandRegister Synopsis Add a command to change the state of a bit of the I/O command register at a specified time or counter value. Syntax MIL_INT MsysIoCommandRegister( MIL_ID&nbsp;IoCmdListSysId, //in MIL_INT64&nbsp;Operation, //in MIL_INT64&nbsp;Reference, //in MIL_DOUBLE&nbsp;DelayFromReference, //in MIL_DOUBLE&nbsp;Duration, //in MIL_INT64&nbsp;BitToOperate, //in void&nbsp;*CommandStatusPtr //out ) Description This function adds (registers) a command to the I/O command list to change the state of a specified bit of the I/O command register at a specified moment (time or counter value). To route the state of an I/O command register bit to an output signal, use MsysControl() with M_IO_SOURCE before you change the state of the bit. When adding a command, you must specify when it must be executed. If the command list was allocated using MsysIoAlloc() with M_CLOCK, specify the time at which to execute the command in seconds after a specified reference time; otherwise, specify it in number of counter increments after a specified reference counter value. For example, if you want to execute a command 50 msecs after the moment MsysIoCommandRegister() is called, you would specify M_REFERENCE_VALUE_CURRENT as the reference time and 0.05 seconds as the amount of time after this reference time to execute the command. When adding a command to change an I/O command register bit such that a pulse is generated on the associated signal, two commands are actually added; one command to transition the signal at the specified moment and one command to transition the signal back to its original state after the specified pulse duration. Note that if you want to specify the duration of the pulse in seconds, but MsysIoAlloc() with M_CLOCK is not set as the counter source, use a timer to generate the pulse and the I/O command list to trigger the timer (generation of the pulse); schedule an M_IMPULSE command instead and use the affected I/O command register bit as the trigger source of the timer. Multiple commands can be scheduled to execute at the same time or counter value, as long as the commands are affecting different I/O command register bits. If a command has been registered with the I/O command list to affect a specific I/O command register bit, and you attempt to add a different command to affect the same bit at the same specified time or counter value, the original command will be overwritten. [Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. Parameters Parameters IoCmdListSysId Specifies the identifier of the I/O command list in which to add a command. Operation Specifies the command to add to the I/O command list to change the state of the specified I/O command register bit. This parameter can be set to one of the following values: For specifying the command to register Value Description MIL system-specifictooltip (‡) M_EDGE_FALLING Specifies that the command will change the specified bit such that the associated signal will transition from high to low, if it is high. ‡ M_EDGE_RISING Specifies that the command will change the specified bit such that the associated signal will transition from low to high, if it is low. ‡ M_IMPULSE Specifies the command will change the specified bit such that the associated signal will produce the shortest possible active-high pulse on the specified I/O command list bit. An active-high pulse is a low-to-high signal transition followed by a high-to-low signal transition. Unlike M_PULSE_HIGH, the Duration parameter must be set to M_DEFAULT and a single command producing the shortest possible pulse is generated. This operation should not be output to external devices since it might be filtered out as noise. It can, however, be used to trigger internal hardware devices, such as timers. ‡ M_NONE Specifies no operation is performed. This operation can be used to cancel a command previously added to the I/O command list. ‡ M_PULSE_HIGH Specifies to add two commands to the I/O command list, an M_EDGE_RISING and an M_EDGE_FALLING command, to change the specified bit such that the associated signal will produce an active-high pulse. An active-high pulse is a low-to-high signal transition followed by a high-to-low signal transition; specify the length of the pulse using the Duration parameter. Note that if the signal is already high, it will remain high for the specified duration and then transition to low (unless a command is added to transition it to low earlier). ‡ M_PULSE_LOW Specifies to add two commands to the I/O command list, an M_EDGE_FALLING and an M_EDGE_RISING command, to change the specified bit such that the associated signal will produce an active-low pulse. An active-low pulse is a high-to-low signal transition followed by a low-to-high signal transition; specify the length of the pulse using the Duration parameter. Note that if the signal is already low, it will remain low for the specified duration and then transition to high (unless a command is added to transition it to high earlier). ‡ Combination values for the values listed in For specifying the command to register. You can add one of the following values to the above-mentioned values to specify that the operation will be automatically added to the I/O command list upon the change of an I/O command register. For automatically adding operations to the I/O command list Combination value Description MIL system-specifictooltip (‡) M_AUTO_REGISTER Specifies to automatically add the specified command to the I/O command list every time the latch used as a reference ( M_LATCHn) is triggered. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ M_AUTO_REGISTER_CANCEL Specifies to stop automatically adding the specified command to the I/O command list every time the latch used as a reference ( M_LATCHn) is triggered. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ Reference Specifies the reference time or counter value to which the delay is added. This parameter can be set to one of the following values: For specifying the reference timestamp Value Description MIL system-specifictooltip (‡) M_LATCHn Specifies to schedule the operation relative to the current value of reference latch n, where n is a number from 1 to 4. Note that M_LATCHn must be used with either M_AUTO_REGISTER or M_AUTO_REGISTER_CANCEL. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ For the Matrox Iris GTX, n can be a value from 1 to 2. ‡ For the Matrox Concord PoE, n can be a value from 1 to 4. ‡ For the Matrox Indio, n can be a value from 1 to 4. ‡ M_REFERENCE_VALUE_CURRENT Specifies to schedule the command relative to the current moment (that is, the moment MsysIoCommandRegister() is called). ‡ Value Specifies the time or counter value relative to which to schedule the command. This is typically a previously inquired time or counter value. You can inquire the time or counter value at a specific moment during the execution of your program using MsysIoInquire() with M_REFERENCE_VALUE. Additionally, if using a latch that has previously saved the time or counter value upon a hardware event, you can inquire this using MsysIoInquire() with M_REFERENCE_LATCH_VALUE or within the scope of a system hook-handler function using MsysGetHookInfo() with M_REFERENCE_LATCH_VALUE. ‡ DelayFromReference Specifies the delay to add to the reference time or counter value; the sum of the two establishes the specific moment that the command is executed. If the I/O command list was allocated using MsysIoAlloc() with M_CLOCK as the counter source, specify the delay in seconds. Otherwise, specify it in number of counter increments. Note that, if the command list was allocated for an M_CLOCK operation and commands are set to M_AUTO_REGISTER, this parameter's value should be at least twice the clock period. To learn the length of the clock period (in Hz), use MsysIoInquire() with M_CLOCK_FREQUENCY. Duration Specifies the duration of the pulse if the command specified with Operation is M_PULSE_HIGH or M_PULSE_LOW. If the I/O command list was allocated with M_CLOCK as the counter source, specify the delay in seconds. Otherwise, specify it in number of counter increments. When adding other types of commands, set this parameter to M_DEFAULT. BitToOperate Specifies the bit of the I/O command register to affect with the command. This parameter can be set to the following value: For specifying the bit of the I/O command register to operate Value Description MIL system-specifictooltip (‡) M_IO_COMMAND_BITn Specifies that the command must affect bit n of the I/O command register, where n can be a value of 0 to 7. Note that, if you need to route the state of the bit to an auxiliary signal, use MsysControl() with M_IO_SOURCE before you change the state of the bit. When performing multiple automatically registered operations (using M_AUTO_REGISTER), each automatically registered operation must affect a unique I/O command register bit; otherwise, the last automatically registered operation will override the previous that affects the same register bit. ‡ MIL system specific For the Matrox Iris GTX, n can be a value from 0 to 3. ‡ CommandStatusPtr Accepts the following address: Data type: address of a MIL_INT Specifies the address in which to write whether the command was successfully added to the list. You can set this parameter to M_NULL if this information is not required. This parameter can return one of the following values: For returning the status of the command registration Value Description MIL system-specifictooltip (‡) M_NULL Specifies that the function successfully scheduled the command. ‡ M_INVALID Specifies that the moment at which to execute the command had elapsed when the function was executed. ‡ M_UNKNOWN Specifies that the function encountered an error and could not schedule the command. ‡ Return value The returned value is M_NULL if the function successfully scheduled the command, M_INVALID if the moment at which to execute the command had elapsed when the function was executed, and M_UNKNOWN if the function encountered an error or if the CommandStatusPtr parameter was set to M_NULL. Compilation information Header Include mil.h. Library Use mil.lib. DLL Requires mil.dll. Syntax Description Parameters - IoCmdListSysId - Operation For specifying the command to register + For automatically adding operations to the I/O command list - Reference For specifying the reference timestamp - DelayFromReference - Duration - BitToOperate For specifying the bit of the I/O command register to operate - CommandStatusPtr For returning the status of the command registration Return value Compilation information M_LATCHn M_IO_COMMAND_BITn ",
      "wordCount": 1790,
      "subEntries": []
    },
    {
      "id": "Reference_sysIo_MsysIoControl",
      "version": null,
      "title": "MsysIoControl",
      "subTitles": null,
      "location": "MIL Reference",
      "pageURL": "content\\Reference\\sysIo\\MsysIoControl.htm",
      "text": " MsysIoControl Synopsis Control an I/O command list setting. Syntax void MsysIoControl( MIL_ID&nbsp;IoCmdListSysId, //in MIL_INT64&nbsp;ControlType, //in MIL_DOUBLE&nbsp;ControlValue //in ) Description This function allows you to control an I/O command list setting. To inquire the current value of a particular I/O command list setting, use MsysIoInquire(). [Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. Parameters Parameters IoCmdListSysId Specifies the identifier of the I/O command list. ControlType Specifies the type of I/O command list setting to control. See the Parameter associations section for possible values that can be specified. ControlValue Specifies the new value to assign to the I/O command list setting specified by the ControlType parameter. See the Parameter associations section for possible values that can be specified. Parameter associations The tables below list possible values for the ControlType and ControlValue parameters. For controlling I/O command list settings For controlling an I/O command list reference latch The following control type allows you to control an I/O command list setting. For controlling I/O command list settings ControlType Description MIL system-specifictooltip (‡) ControlValue M_IO_COMMAND_CANCEL Clears the specified I/O command list of any command that affects the specified I/O command register bits. [Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ M_IO_COMMAND_BIT_MASK( MIL_INT BitMaskValue ) Specifies I/O command register bits using a bit-encoded value, in which each bit represents one I/O command register bit. ‡ Parameters BitMaskValue Specifies the bit encoded value. ‡ M_IO_COMMAND_BITn Specifies the I/O command register bit n, where n is a number from 0 to 7. ‡ MIL system specific For the Matrox Iris GTX, n can be a value from 0 to 3. ‡ M_IO_COMMAND_COUNTER_ACTIVATION Sets which edge of the source signal to use to increment the I/O command list's internal counter. This setting should be changed only when the I/O command list is allocated using MsysIoAlloc() with M_AUX_IOn. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ M_DEFAULT Same as M_EDGE_RISING. ‡ M_ANY_EDGE Specifies to use both a low-to-high and a high-to-low signal transition to increment the I/O command list's internal counter. ‡ M_EDGE_FALLING Specifies to use a high-to-low signal transition to increment the I/O command list's internal counter. ‡ M_EDGE_RISING Specifies to use a low-to-high signal transition to increment the I/O command list's internal counter. ‡ The following control types allow you to control settings for one of the I/O command list's reference latches. Reference latches are used to store a time or counter value when the required signal transition occurs on a specified input signal. You can then inquire the time or counter value saved in the latch using MsysIoInquire() with M_REFERENCE_LATCH_VALUE. For controlling an I/O command list reference latch ControlType Description MIL system-specifictooltip (‡) ControlValue M_REFERENCE_LATCH_ACTIVATION Sets the signal transition upon which to store the time or counter value to the specified reference latch. You must specify a combination value from the following table: To specify which reference latch to affect ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ M_DEFAULT Same as M_EDGE_RISING. ‡ M_ANY_EDGE Specifies to store the time or counter value to the latch upon both a low-to-high and a high-to-low signal transition. ‡ M_EDGE_FALLING Specifies to store the time or counter value to the latch upon a high-to-low signal transition. ‡ M_EDGE_RISING Specifies to store the time or counter value to the latch upon a low-to-high signal transition. ‡ M_REFERENCE_LATCH_STATE Sets the state of the specified reference latch. You must specify a combination value from the following table: To specify which reference latch to affect ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ M_DEFAULT Same as M_DISABLE. ‡ M_DISABLE Specifies the reference latch is disabled. ‡ M_ENABLE Specifies the reference latch is enabled. ‡ M_REFERENCE_LATCH_TRIGGER_SOURCE Sets which input signal will trigger storing the timestamp or counter value to the specified reference latch. You must specify a combination value from the following table: To specify which reference latch to affect ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ M_AUX_IOn Specifies to use auxiliary input signal n, where n is a number of the auxiliary input signal. ‡ MIL system specific [This is only applicable to Zebra 4Sight] For Zebra 4Sight EV6/EV7, n can be a value from 8 to 15. ‡ For the Matrox Concord PoE, n can be a value from 2 to 7. ‡ For the Matrox Indio, n can be a value from 8 to 15. ‡ For the Matrox Iris GTX, n can be a value from 3 to 6. ‡ M_EXPOSURE Specifies to route the exposure signal of the camera. ‡ M_GRAB_TRIGGER_READY Specifies to route the internal grab trigger ready signal. ‡ M_TIMER_STROBE Specifies to route the internal timer strobe signal. ‡ M_TIMERn Specifies to use timer n, where n is a number of the timer. ‡ Combination value for the values listed in For controlling an I/O command list reference latch. You must add the following value to the above-mentioned values to specify which reference latch to affect. For specifying the reference latch to affect Combination value Description MIL system-specifictooltip (‡) M_LATCHn Specifies to affect reference latch n, where n is the latch number. ‡ MIL system specific [This is only applicable to Zebra 4Sight] For Zebra 4Sight EV6/EV7, n is a number from 1 to 4. ‡ For Matrox Iris GTX, n is a number from 1 to 2. ‡ For the Matrox Concord PoE, n can be a value from 1 to 4. ‡ For the Matrox Indio, n can be a value from 1 to 4. ‡ Compilation information Header Include mil.h. Library Use mil.lib. DLL Requires mil.dll. Syntax Description Parameters - IoCmdListSysId - ControlType - ControlValue Parameter Associations For controlling I/O command list settings For controlling an I/O command list reference latch + For specifying the reference latch to affect Compilation information M_IO_COMMAND_BITn M_AUX_IOn M_TIMERn M_LATCHn ",
      "wordCount": 1107,
      "subEntries": []
    },
    {
      "id": "Reference_sysIo_MsysIoFree",
      "version": null,
      "title": "MsysIoFree",
      "subTitles": null,
      "location": "MIL Reference",
      "pageURL": "content\\Reference\\sysIo\\MsysIoFree.htm",
      "text": " MsysIoFree Synopsis Free the specified I/O command list. Syntax void MsysIoFree( MIL_ID&nbsp;IoCmdListSysId //in ) Description This function deallocates the specified I/O command list previously allocated with MsysIoAlloc(). [Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. All specified I/O command lists allocated on a particular system must be freed before the system can be freed, unless M_UNIQUE_ID was specified during allocation. Parameters Parameter IoCmdListSysId Specifies the identifier of the I/O command list to free. Compilation information Header Include mil.h. Library Use mil.lib. DLL Requires mil.dll. Syntax Description Parameters - IoCmdListSysId Compilation information ",
      "wordCount": 112,
      "subEntries": []
    },
    {
      "id": "Reference_sysIo_MsysIoInquire",
      "version": null,
      "title": "MsysIoInquire",
      "subTitles": null,
      "location": "MIL Reference",
      "pageURL": "content\\Reference\\sysIo\\MsysIoInquire.htm",
      "text": " MsysIoInquire Synopsis Inquire about an I/O command list setting. Syntax MIL_INT MsysIoInquire( MIL_ID&nbsp;IoCmdListSysId, //in MIL_INT64&nbsp;InquireType, //in void&nbsp;*UserVarPtr //out ) Description This function inquires about the specified I/O command list setting. Note that you can use MsysIoControl() to control specific I/O command list settings. [Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. Parameters Parameters IoCmdListSysId Specifies the identifier of the I/O command list. InquireType Specifies the type of I/O command list setting about which to inquire. See the Parameter associations section for possible values that can be specified. UserVarPtr Accepts the address of one of the following (see the Parameter associations section for specifics on which is expected): MIL_DOUBLE MIL_ID MIL_INT MIL_INT64 Specifies the address in which to write the requested information. Since the MsysIoInquire() function also returns the requested information, you can set this parameter to M_NULL. See the Parameter associations section for possible values that can be returned. Parameter associations The tables below list possible values for the InquireType parameter and possible values returned to the UserVarPtr parameter. For inquiring general I/O command list settings For inquiring reference latch settings The following inquire types allow you to inquire general I/O command list settings. For inquiring general I/O command list settings InquireType Description MIL system-specifictooltip (‡) UserVarPtr - Possible values returned M_CLOCK_FREQUENCY Inquires the frequency of the I/O command list's clock signal. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_DOUBLE Data type: address of a MIL_DOUBLE ‡ Value Specifies the frequency of the I/O command list's clock, in Hz. ‡ M_IO_COMMAND_COUNTER_ACTIVATION Inquires which edge of the source signal is used to increment the I/O command list's internal counter. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT Data type: address of a MIL_INT ‡ M_ANY_EDGE Specifies to use both a low-to-high and a high-to-low signal transition to increment the I/O command list's internal counter. ‡ M_EDGE_FALLING Specifies to use a high-to-low signal transition to increment the I/O command list's internal counter. ‡ M_EDGE_RISING Specifies to use a low-to-high signal transition to increment the I/O command list's internal counter. ‡ M_IO_COMMAND_COUNTER_SOURCE Inquires the signal to use as the counter source. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT64 Data type: address of a MIL_INT64 ‡ M_AUX_IOn Specifies to use auxiliary input signal n as the counter source, where n is the number for one of the auxiliary input signals. ‡ M_CLOCK Specifies to use your hardware's clock signal as a counter source. ‡ M_ROTARY_ENCODERn Specifies to use the output of rotary decoder n as the counter source, where n is the number of the rotary decoder. ‡ M_IO_COMMAND_LIST_NUMBER Inquires which I/O command list is allocated. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT64 Data type: address of a MIL_INT64 ‡ M_IO_COMMAND_LIST1 Specifies the first I/O command list. ‡ M_IO_COMMAND_LIST2 Specifies the second I/O command list. ‡ M_IO_OBJECT_TYPE Inquires the type of I/O command list that is allocated. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT64 Data type: address of a MIL_INT64 ‡ M_IO_COMMAND_LIST Specifies a general I/O command list. ‡ M_OWNER_SYSTEM Inquires the MIL identifier (MIL_ID) of the system on which the I/O command list has been allocated. ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_ID Data type: address of a MIL_ID ‡ M_DEFAULT_HOST Specifies the default Host system of the current MIL application. ‡ MIL system identifier Specifies a valid system identifier, previously allocated using MsysAlloc(). ‡ M_REFERENCE_VALUE Inquires the I/O command list's internal counter value at the current moment (that is, the moment MsysIoInquire() is called). ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT64 MORE Data type: address of a MIL_INT64 Note: For 32-bit operating systems, an error will be returned if UserVarPtr is set to M_NULL. ‡ Value Specifies the I/O command list's internal counter value. ‡ The following inquire types allow you to inquire settings for one of the I/O command list's reference latches. For inquiring reference latch settings InquireType Description MIL system-specifictooltip (‡) UserVarPtr - Possible values returned M_REFERENCE_LATCH_ACTIVATION Inquires the signal transition upon which to store the time or counter value to the specified reference latch. You must specify a combination value from the following table: To specify which reference latch to inquire about ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT Data type: address of a MIL_INT ‡ M_ANY_EDGE Specifies to store the time or counter value to the latch upon both a low-to-high and a high-to-low signal transition. ‡ M_EDGE_FALLING Specifies to store the time or counter value to the latch upon a high-to-low signal transition. ‡ M_EDGE_RISING Specifies to store the time or counter value to the latch upon a low-to-high signal transition. ‡ M_REFERENCE_LATCH_STATE Inquires the state of the specified reference latch. You must specify a combination value from the following table: To specify which reference latch to inquire about ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT Data type: address of a MIL_INT ‡ M_DISABLE Specifies the reference latch is disabled. ‡ M_ENABLE Specifies the reference latch is enabled. ‡ M_REFERENCE_LATCH_TRIGGER_SOURCE Inquires which input signal will trigger storing the time or counter value to the specified reference latch. You must specify a combination value from the following table: To specify which reference latch to inquire about ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT Data type: address of a MIL_INT ‡ M_AUX_IOn Specifies to use auxiliary input signal n, where n is a number of the auxiliary input signal. ‡ M_EXPOSURE Specifies to route the exposure signal of the camera. ‡ M_GRAB_TRIGGER_READY Specifies to route the internal grab trigger ready signal. ‡ M_TIMER_STROBE Specifies to route the internal timer strobe signal. ‡ M_TIMERn Specifies to use timer n, where n is a number of the timer. ‡ M_REFERENCE_LATCH_VALUE Inquires the last time or counter value stored by the specified reference latch. You must specify a combination value from the following table: To specify which reference latch to inquire about ‡ MIL system specific [This is only applicable to Zebra 4Sight] On Zebra 4Sight EV6/EV7, this function is only available if a MIL Host system was previously allocated. It is not available on Zebra 4Sight XV6. ‡ UserVarPtr extra info Data type info: Data type: address of a MIL_INT64 MORE Data type: address of a MIL_INT64 Note: For 32-bit operating systems, an error will be returned if UserVarPtr is set to M_NULL. ‡ Value Specifies the last timestamp or counter value stored by the specified reference latch. ‡ Combination value for the values listed in For inquiring reference latch settings. You must add the following value to the above-mentioned values to specify which reference latch to inquire about. For specifying the reference latch to inquire Combination value Description MIL system-specifictooltip (‡) M_LATCHn Specifies to inquire about reference latch n, where n is the latch number. ‡ Return value The returned value is the requested information, cast to a MIL_INT. If the requested information does not fit into a MIL_INT, this function will return M_NULL or truncate the information. Compilation information Header Include mil.h. Library Use mil.lib. DLL Requires mil.dll. Syntax Description Parameters - IoCmdListSysId - InquireType - UserVarPtr Parameter Associations For inquiring general I/O command list settings For inquiring reference latch settings + For specifying the reference latch to inquire Return value Compilation information M_AUX_IOn M_ROTARY_ENCODERn M_TIMERn M_LATCHn ",
      "wordCount": 1627,
      "subEntries": []
    }
  ]
}]