[{
  "id": "Example_PlaceHolder_ID",
  "version": "2024020714",
  "title": "Example_PlaceHolder_Title",
  "wordCount": 0,
  "subEntries": [
    {
      "id": "Examples_Core_Full_M3ddispRobustSetView_CS_m3ddisprobustsetview_cs",
      "version": "2024020714",
      "title": "m3ddisprobustsetview.cs",
      "location": "Sample Code from MIL Examples",
      "text": " Top //---------------------------------------------------------------------------- // // File name: M3ddispRobustSetView.cs // Location: See Matrox Example Launcher in the MIL Control Center // // // Synopsis: This example demonstrates how to use M3ddispSetView // in order to set the view box to the full or robust // bounding box of a point cloud. // // Copyright (C) Matrox Electronic Systems Ltd., 1992-2024. // All Rights Reserved //---------------------------------------------------------------------------- using System; using Matrox.MatroxImagingLibrary; namespace M3ddispRobustSetView { class Program { //----------------------------------------------------------------------------- // Constants. //----------------------------------------------------------------------------- private static readonly string EARPHONES_FILE = MIL.M_IMAGE_PATH + \"3dOutlierPointsRemoval/Earphone.ply\"; //----------------------------------------------------------------------------* // Main. //----------------------------------------------------------------------------* static void Main(string[] args) { Console.Write(\"[EXAMPLE NAME]\\n\"); Console.Write(\"M3ddispRobustSetView\\n\\n\"); Console.Write(\"[SYNOPSIS]\\n\"); Console.Write(\"This example demonstrates how to use M3ddispSetView\\n\"); Console.Write(\"in order to set the view box to the complete or robust\\n\"); Console.Write(\"bounding box of a point cloud.\\n\\n\"); Console.Write(\"[MODULES USED]\\n\"); Console.Write(\"Modules used: application, system, buffer, 3D display, 3D graphics, 3D image processing.\\n\\n\"); // Allocate defaults. var MilApplication = MIL.MappAlloc(\"M_DEFAULT\", MIL.M_DEFAULT, MIL.M_NULL); var MilSystem = MIL.MsysAlloc(MIL.M_DEFAULT, MIL.M_SYSTEM_DEFAULT, MIL.M_DEFAULT, MIL.M_DEFAULT, MIL.M_NULL); // Check for required example files. if (!CheckForRequiredMILFile(EARPHONES_FILE)) { MIL.MappFreeDefault(MilApplication, MilSystem, MIL.M_NULL, MIL.M_NULL, MIL.M_NULL); return; } // Allocate the display. MIL_ID Mil3dDisplay = Alloc3dDisplayId(MilSystem); if (Mil3dDisplay == MIL.M_NULL) { MIL.MappFreeDefault(MilApplication, MilSystem, MIL.M_NULL, MIL.M_NULL, MIL.M_NULL); return; } MIL_ID Mil3dGraList = MIL.M3ddispInquire(Mil3dDisplay, MIL.M_3D_GRAPHIC_LIST_ID, MIL.M_NULL); // Restore the point cloud from a file. MIL_ID MilContainer = MIL.MbufImport(EARPHONES_FILE, MIL.M_DEFAULT, MIL.M_RESTORE, MilSystem, MIL.M_NULL); MIL_ID PointCloudLabel = MIL.M3dgraAdd(Mil3dGraList, MIL.M_ROOT_NODE, MilContainer, MIL.M_DEFAULT); // Get the bounding box of the pointcloud and set it as the display's view box. MIL_ID MilBoundingBox = MIL.M3dgeoAlloc(MilSystem, MIL.M_GEOMETRY, MIL.M_DEFAULT, MIL.M_NULL); MIL_ID MilStatContext = MIL.M3dimAlloc(MilSystem, MIL.M_STATISTICS_CONTEXT, MIL.M_DEFAULT, MIL.M_NULL); MIL.M3dimControl(MilStatContext, MIL.M_BOUNDING_BOX, MIL.M_ENABLE); MIL.M3dimControl(MilStatContext, MIL.M_BOUNDING_BOX_ALGORITHM, MIL.M_ALL_POINTS); MIL.M3dimStat(MilStatContext, MilContainer, MilBoundingBox, MIL.M_DEFAULT); MIL.M3ddispSetView(Mil3dDisplay, MIL.M_VIEW_BOX, MilBoundingBox, MIL.M_DEFAULT, MIL.M_DEFAULT, MIL.M_DEFAULT); // Set the display's rotation axis center. This will keep the // behaviour of auto rotate consistent as we move its interest point. MIL.M3ddispCopy(MIL.M_VIEW_INTEREST_POINT, Mil3dDisplay, MIL.M_ROTATION_AXIS_CENTER, MIL.M_DEFAULT); MIL.M3ddispSelect(Mil3dDisplay, MIL.M_NULL, MIL.M_OPEN, MIL.M_DEFAULT); Console.Write(\"The display's view box is currently set to the full bounding box of the point cloud. \\n\"); Console.Write(\"Because of the presence of outlier points in the point cloud, this makes it hard to see the object properly. \\n\"); Console.Write(\"Press any key to set the view box to the robust bounding box. \\n\\n\"); Console.ReadKey(); // Get the robust bounding box of the point cloud and set it as the display's view box. MIL.M3dimControl(MilStatContext, MIL.M_BOUNDING_BOX_ALGORITHM, MIL.M_ROBUST); MIL.M3dimStat(MilStatContext, MilContainer, MilBoundingBox, MIL.M_DEFAULT); MIL.M3ddispSetView(Mil3dDisplay, MIL.M_VIEW_BOX, MilBoundingBox, MIL.M_DEFAULT, MIL.M_DEFAULT, MIL.M_DEFAULT); // Set the display's rotation axis center. This will keep the // behaviour of auto rotate consistent as we move its interest point. MIL.M3ddispCopy(MIL.M_VIEW_INTEREST_POINT, Mil3dDisplay, MIL.M_ROTATION_AXIS_CENTER, MIL.M_DEFAULT); Console.Write(\"The display's view box is currently set to the robust bounding box of the point cloud. \\n\"); Console.Write(\"Now, the object is displayed at a more practical scale. \\n\"); Console.Write(\"Press any key to exit. \\n\\n\"); Console.ReadKey(); // Free allocated resources. MIL.M3dimFree(MilStatContext); MIL.M3dgeoFree(MilBoundingBox); MIL.MbufFree(MilContainer); MIL.M3ddispFree(Mil3dDisplay); MIL.MappFreeDefault(MilApplication, MilSystem, MIL.M_NULL, MIL.M_NULL, MIL.M_NULL); } //---------------------------------------------------------------------------- // Check for required files to run the example. //---------------------------------------------------------------------------- static bool CheckForRequiredMILFile(string FileName) { MIL_INT FilePresent = MIL.M_NO; MIL.MappFileOperation(MIL.M_DEFAULT, FileName, MIL.M_NULL, MIL.M_NULL, MIL.M_FILE_EXISTS, MIL.M_DEFAULT, ref FilePresent); if (FilePresent == MIL.M_NO) { Console.Write(\"The footage needed to run this example is missing. You need \\n\"); Console.Write(\"to obtain and apply a separate specific update to have it.\\n\\n\"); Console.Write(\"Press any key to end.\\n\\n\"); Console.ReadKey(); } return (FilePresent == MIL.M_YES); } //---------------------------------------------------------------------------- // Allocates a 3D display and returns its MIL identifier. //---------------------------------------------------------------------------- static MIL_ID Alloc3dDisplayId(MIL_ID MilSystem) { MIL.MappControl(MIL.M_DEFAULT, MIL.M_ERROR, MIL.M_PRINT_DISABLE); MIL_ID MilDisplay3D = MIL.M3ddispAlloc(MilSystem, MIL.M_DEFAULT, \"M_DEFAULT\", MIL.M_DEFAULT, MIL.M_NULL); MIL.MappControl(MIL.M_DEFAULT, MIL.M_ERROR, MIL.M_PRINT_ENABLE); if (MilDisplay3D == MIL.M_NULL) { Console.Write(\"\\n\"); Console.Write(\"The current system does not support the 3D display.\\n\"); Console.Write(\"Press any key to exit.\\n\"); Console.ReadKey(); } return MilDisplay3D; } } } ",
      "wordCount": 585
    }
  ]
}]