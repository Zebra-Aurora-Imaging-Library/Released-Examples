[{
  "id": "UG_lut",
  "version": "2024020714",
  "title": "Lookup tables",
  "subTitles": null,
  "location": "MIL UG P04: 2D related information",
  "pageURL": "content\\UserGuide\\lut\\ChapterInformation.htm",
  "text": " Chapter 24: Lookup tables This chapter describes lookup tables (LUTs). It shows you how to generate and modify them and briefly discusses how to use them. Lookup tables in general LUTs and data buffers Loading and generating data into LUTs Generating data directly into the LUT buffer Loading LUTs with precalculated data Using LUTs ",
  "wordCount": 56,
  "subEntries": [
    {
      "id": "UG_lut_Lookup_tables_in_general",
      "version": null,
      "title": "Lookup tables in general ",
      "subTitles": null,
      "location": "MIL UG P04: 2D related information",
      "pageURL": "content\\UserGuide\\lut\\Lookup_tables_in_general.htm",
      "text": " Lookup tables in general Lookup tables (LUTs) are collections of memory locations that are used to map data to precalculated values. They can easily reduce a multi-step or complex operation to a single-step LUT mapping. You can map an image buffer through a LUT, using MimLutMap(). If the hardware system permits, you can also use LUTs to precondition input data at acquisition time, before it is stored in an image buffer. LUTs can also be used (hardware system permitting) to adjust the color contrast and intensity of an image upon display, without affecting the actual data. To associate a LUT buffer with a display, use MdispLut(), or, for 3D displays, M3ddispLut(). Lookup tables in general ",
      "wordCount": 117,
      "subEntries": []
    },
    {
      "id": "UG_lut_LUTs_and_data_buffers",
      "version": null,
      "title": "LUTs and data buffers",
      "subTitles": null,
      "location": "MIL UG P04: 2D related information",
      "pageURL": "content\\UserGuide\\lut\\LUTs_and_data_buffers.htm",
      "text": " LUTs and data buffers The MIL package represents LUTs as LUT data buffers. As with any other data buffer, LUT buffers must be allocated before they are used. A LUT buffer can be loaded, stored, or copied to another buffer (not necessarily to another LUT buffer) or to disk. You can also allocate child LUT buffers. When a LUT buffer is no longer required, you should free its memory space, using MbufFree(). LUT buffers are typically one-dimensional data buffers created with MbufAlloc1d() (single row). However, you can allocate a color RGB LUT, using MbufAllocColor(). In this case, set the number of bands to 3 (for RGB), the Y-dimension to 1, and the X-dimension to have enough entries to represent the full range of possible values of the image buffer. LUTs and data buffers ",
      "wordCount": 135,
      "subEntries": []
    },
    {
      "id": "UG_lut_Loading_and_generating_data_into_LUTs",
      "version": null,
      "title": "Loading and generating data into LUTs",
      "subTitles": [
        "Generating data directly into the LUT buffer",
        "Loading LUTs with precalculated data"
      ],
      "location": "MIL UG P04: 2D related information",
      "pageURL": "content\\UserGuide\\lut\\Loading_and_generating_data_into_LUTs.htm",
      "text": " Loading and generating data into LUTs With MIL, you can generate data directly into a LUT buffer or calculate the data and then load it in a LUT buffer. Generating data directly into the LUT buffer You can generate general data directly into a LUT buffer, using MgenLutRamp() or MgenLutFunction(). The MgenLutRamp() function generates a value for each LUT index within the specified index range. The difference between the start value and the end value divided by (the number of entries specified by the index range - 1) produces the increment. The increment is then used to generate the remaining entries of the index range. If the increment is positive, MgenLutRamp() generates a ramp. If the increment is negative, the function generates an inverse ramp. If the increment is equal to zero, it loads the entire LUT range with the given start value. The MgenLutFunction() function generates a value for each LUT index within the specified index range according to a specified mathematical function. The functions available are: M_LOG, M_EXP, M_SIN, M_COS, M_TAN, and M_QUAD. The specified start value is used as the initial X value in the equation. The remaining entries of the index range are generated by incrementing the value of X by 1 for each index. The MimHistogramEqualize() function can be used to create a LUT for intensity correction. When generating data in a color LUT buffer, the same data is written to all bands. To load each color band with different data, you would have to generate the data into three separate one-dimensional LUT buffers, then copy each buffer to the appropriate color band of the color LUT buffer, using MbufCopyColor(). Alternatively, you can allocate three separate one-dimensional child buffers into which the values for each color band will be generated. The use of child buffers will cause the values for each color band in the LUT buffer to be automatically updated and no copying is necessary. Loading LUTs with precalculated data There are several ways to generate more complex LUTs. Most of these, however, involve precalculating the data, then loading it into the LUT buffer: Calculate data, using your Host system, and then load it into the LUT, using MbufPut(), MbufPut1d(), or MbufPutColor(). Generate data into another data buffer, using MIL functions other than MgenLutRamp() (for example, using the MimArith() function and perhaps the histogram of the image), then copy the data to the LUT buffer, using MbufCopy() or MbufCopyColor(). Load previously saved LUT data from disk to the LUT buffer (MbufLoad()). Note, when loading data from disk, there should be enough data for each dimension of the LUT buffer. Restore a previously saved LUT, using MbufRestore(). Note, this function actually performs the LUT buffer allocation. Loading and generating data into LUTs Generating data directly into the LUT buffer Loading LUTs with precalculated data ",
      "wordCount": 471,
      "subEntries": []
    },
    {
      "id": "UG_lut_Using_LUTs",
      "version": null,
      "title": "Using LUTs",
      "subTitles": null,
      "location": "MIL UG P04: 2D related information",
      "pageURL": "content\\UserGuide\\lut\\Using_LUTs.htm",
      "text": " Using LUTs In MIL, LUTs can be used in different circumstances: When performing certain processing operations. When displaying data (if supported by hardware). When acquiring data from a digitizer (if supported by hardware). For details, refer to the chapters that discuss image processing, displays, and acquiring data with your digitizer. Using LUTs ",
      "wordCount": 54,
      "subEntries": []
    }
  ]
}]