[{
  "id": "UG_3D_Model_finder",
  "version": "2024020714",
  "title": "3D model finder",
  "subTitles": null,
  "location": "MIL UG P05: 3D processing and analysis",
  "pageURL": "content\\UserGuide\\3D_Model_finder\\ChapterInformation.htm",
  "text": " Chapter 37: 3D model finder This chapter describes how to use the 3D Model Finder module to find occurrences of box, cylinder, rectangular plane, sphere, or surface models in a point cloud. MIL 3D Model Finder module Steps to performing a 3D model search Basic concepts for the MIL 3D Model Finder module Defining and adding models to your 3D model finder context Geometric-type models Nominal versus range-type geometric models Ways to define a geometric model Models defined from specified numeric constraints Models defined from specified 3D geometries Surface models Determining what is a match Score Reserved points Customizing search settings Maximum expected coverage Acceptance level Certainty level Expected number of occurrences Search settings specific to geometric models Sphere models Maximum fit iterations Rectangular plane models Normals Elongation Box models Number of visible planes Reference direction Completion size when a single box face is found Acceptance level, certainty level, and model coverage for individual faces Normals Elongation Search settings specific to surface models Fit refinement Scene complexity and perseverance Model and target point cloud resolution Simplifying the scene Obtaining the most accurate model representation for score and fit Scene projection Constraining results Target acceptance and extra points in the occurrences Color score Fit score and maximum fit distance Resting plane and occurrence orientation Retrieving and drawing results Possible results Drawing results 3D model finder example ",
  "wordCount": 227,
  "subEntries": [
    {
      "id": "UG_3D_Model_finder_3D_Model_finder_overview",
      "version": null,
      "title": "MIL 3D Model Finder module",
      "subTitles": null,
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\3D_Model_finder_overview.htm",
      "text": " MIL 3D Model Finder module The 3D Model Finder module allows you to find occurrences of box, cylinder, rectangular plane, sphere, or surface models in a point cloud. Box, cylinder, rectangular plane, and sphere models are collectively referred to as geometric models because of their basic geometric shape. You can define geometric models from specified numeric constraints, or from one or two specified 3D geometries (except for rectangular plane models). There are two types of geometric models: nominal models and range-type models. You should define your model as a nominal model when the expected occurrences are all approximately the same size; you should define your model as a range-type model when you want to accept a variety of occurrences at different scales. Surface models are models added from a point cloud. You can search for occurrences in any orientation, but they need to be at approximately the same scale. The 3D Model Finder module allows you to tailor your search to fit the requirements of your application. For example, if you know how many occurrences are present in the point cloud, you can set the maximum number of occurrences for which to search, which can decrease the search time. Once the search is complete, you can retrieve results for each found occurrence, such as its score (which is based on its model coverage) and its center point. For a surface model, you can specify the sorting key to use to return results of occurrences; this is useful, for example, to retrieve the results of the highest occurrence first (the one with the highest Z-coordinate), instead of retrieving results of the occurrence with the highest score first. You can copy a group of results from the 3D model finder result buffer into an image buffer or a transformation matrix object. For geometric models, you can also copy the geometry of the occurrence into a 3D geometry object. The module also allows you to restore a 3D model finder context from a file or memory stream, or to save a 3D model finder context to a file or memory stream. MIL 3D Model Finder module ",
      "wordCount": 355,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Steps_to_performing_a_3D_model_search",
      "version": null,
      "title": "Steps to performing a 3D model search",
      "subTitles": null,
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Steps_to_performing_a_3D_model_search.htm",
      "text": " Steps to performing a 3D model search The following steps provide a basic methodology for using the 3D Model Finder module: Allocate a find 3D model finder context, using M3dmodAlloc(). Optionally, if you have previously saved a 3D model finder context to a file, you can instead restore it, using M3dmodRestore(). Allocate a 3D model finder result buffer, using M3dmodAllocResult(). Define and add a model to the 3D model finder context, using M3dmodDefine(). Specify your required search settings for both the 3D model finder context and the model, using M3dmodControl(). Preprocess the 3D model finder context, using M3dmodPreprocess(). Search a point cloud for occurrences of the model in your 3D model finder context, using M3dmodFind(). Retrieve the required results from the 3D model finder result buffer, using M3dmodGetResult(). If required, copy a group of results from your 3D model finder result buffer into a 3D geometry object, an image buffer, or a transformation matrix object, using M3dmodCopyResult(). For example, you can define the geometry of a 3D geometry object from a found occurrence, create image masks, or copy fixturing coefficients into a transformation matrix object. To draw the results of a found 3D model occurrence into a 3D graphics list, perform the following: Allocate a draw 3D model finder context to hold the settings for the draw, using M3dmodAlloc() with either M_DRAW_3D_GEOMETRIC_CONTEXT (to draw occurrences of geometric models) or M_DRAW_3D_SURFACE_CONTEXT (to draw occurrences of surface models). Note that you can skip this step and use a default context instead. Specify the draw operations and options for the draw, using M3dmodControlDraw(). Draw the result of a found occurrence, using M3dmodDraw3d(). If required, save your 3D model finder context, using M3dmodSave() or M3dmodStream(). Free all your allocated objects, using M3dmodFree(), unless M_UNIQUE_ID was specified during allocation. Steps to performing a 3D model search ",
      "wordCount": 303,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Basic_concepts",
      "version": null,
      "title": "Basic concepts for the MIL 3D Model Finder module",
      "subTitles": null,
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Basic_concepts.htm",
      "text": " Basic concepts for the MIL 3D Model Finder module The basic concepts and vocabulary conventions for the MIL 3D Model Finder module are: 3D model finder context. A MIL object that stores the model for which to search. The 3D model finder context also stores global search settings that apply to the search algorithm. Bounding box. The smallest axis-aligned box that contains the ideal geometric shape of the fitted model at the location of an occurrence. Central axis unit vector. A vector of unit length that points along a cylinder model's central axis. It points from the center of the cylinder's first base towards the center of its second base. Fit distance. The maximum distance from the occurrence at which a point can be included in the fit. Inlier points. Points in the point cloud that are considered part of a model occurrence. A point must be within the fit distance from the surface of the occurrence to be considered an inlier. Model. The information that defines the pattern of points to find in the point cloud. The 3D Model Finder module supports box, rectangular plane, cylinder, sphere, and surface models. Model coverage. The percentage of the model's surface found in the occurrence. Occurrence. An instance of the model found in the point cloud. Point cloud. A set of 3D points representing objects in a scene. Reference direction. The position of the 3D sensor or the direction of the 3D sensor's line of sight relative to the acquired point cloud. Reserved points. Points that are reserved in an area around an occurrence; they are considered part of the occurrence but are not used when calculating the fit. They cannot be considered part of any other occurrence. Root-mean-square (RMS) error. A measure of how well the points in an occurrence fit the model. A perfect fit gives a root-mean-square error of 0.0. Score. A measure of how well an occurrence matches a model. The score is defined as the model coverage. Working coordinate system. The implicit real world coordinate system used to express the coordinates of 3D points in a point cloud. Each point cloud container has its own working coordinate system. Basic concepts for the MIL 3D Model Finder module ",
      "wordCount": 372,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Defining_and_adding_models_to_your_3D_model_finder_context",
      "version": null,
      "title": "Defining and adding models to your 3D model finder context",
      "subTitles": [
        "Geometric-type models",
        "Nominal versus range-type geometric models",
        "Ways to define a geometric model",
        "Models defined from specified numeric constraints",
        "Models defined from specified 3D geometries",
        "Surface models"
      ],
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Defining_and_adding_models_to_your_3D_model_finder_context.htm",
      "text": " Defining and adding models to your 3D model finder context Once you have allocated a find 3D model finder context using M3dmodAlloc(), you can then add a model to it using M3dmodDefine(). The model that you add must match your 3D model finder context; for example, you cannot add a sphere model to a find cylinder 3D model finder context. You can define one model per 3D model finder context. Use M3dmodControl() to specify individual model search settings, as well as general settings of a 3D model finder context. Note that when you add or delete a model or change context/model settings, the 3D model finder context must be preprocessed, using M3dmodPreprocess(), before you can perform a search. Geometric-type models You can add a geometric model (for example, M_BOX) to a find 3D model finder context using M3dmodDefine() with M_ADD or M_ADD_FROM_GEOMETRY. The model must match the type of context; for example, you can only add a box model to a find box 3D model finder context. In addition, there are two types of geometric models: nominal and range-type. Nominal versus range-type geometric models A model can be defined either nominally or using a range of accepted values. Nominal models should be used when the expected occurrences are all approximately the same size; define models as ranges when you want to accept a variety of occurrences at different scales. Note that for range-type models, the proportions of the occurrences don't have to be the same as that of the model, as long as they are in the valid range. When using a range-type model, you should define the model's range to be close to the expected range of occurrences. Defining a model with a very wide range can increase the search time. To define models nominally, call M3dmodDefine() with M_BOX, M_CYLINDER, M_RECTANGLE, or M_SPHERE. To define a range-type model, call M3dmodDefine() with M_BOX_RANGE, M_CYLINDER_RANGE, M_RECTANGLE_RANGE, or M_SPHERE_RANGE. Ways to define a geometric model There are two different ways that you can define and add a model to your 3D model finder context: You can define models from specified numeric constraints. You can define models from specified 3D geometries. Models defined from specified numeric constraints A model defined from specified numeric constraints is one whose dimensions, like its radius or length, are set by numeric values you pass to M3dmodDefine(). You can define a model from specified numeric constraints and add it to your 3D model finder context using M3dmodDefine() with M_ADD. For example, if you want to define a nominal sphere model (M_SPHERE) from specified numeric constraints, you can specify the nominal radius and a tolerance for the radius; occurrences must then have a radius within the specified tolerance of the specified nominal radius. Alternatively, if you want to define a range-type cylinder model (M_CYLINDER_RANGE) from specified numeric constraints, for example, you can specify the minimum and maximum length of the cylinder model; occurrences must then have lengths within this range. Models defined from specified 3D geometries A model defined from specified 3D geometries is one whose dimensions, like its radius or length, are set by the dimensions of 3D geometry objects that were previously allocated using M3dgeoAlloc() with M_GEOMETRY. To add a model to your 3D model finder context from specified 3D geometries, use M3dmodDefine() with M_ADD_FROM_GEOMETRY. For example, if you want to define a nominal sphere model (M_SPHERE) from specified 3D geometries, you can specify the identifier of a 3D sphere geometry object. Your model will have the same radius as that of the specified 3D geometry object. Alternatively, if you want to define a range-type cylinder model (M_CYLINDER_RANGE) from specified 3D geometries, for example, you can specify the identifiers of two 3D cylinder geometry objects. The minimum radius and length of your model will be equal to the radius and length of the first 3D cylinder geometry object, and the maximum radius and length of your model will be equal to the radius and length of the second 3D cylinder geometry object. The following image shows two 3D cylinder geometry objects. One cylinder has a smaller radius and length than the other. If you pass the identifiers of two 3D cylinder geometry objects to M3dmodDefine() with M_ADD_FROM_GEOMETRY and M_CYLINDER_RANGE, M3dmodFind() will only return occurrences whose radii and lengths fall in between those of the two 3D cylinder geometries. Surface models You can define and add surface models to a find surface 3D model finder context using M3dmodDefine() with M_ADD_FROM_POINT_CLOUD and the source point cloud. The surface of the entire point cloud is used as the model. You can use a point cloud restored from a CAD file (using MbufImport() / MbufRestore()). Note that the CAD file must be in the PLY or STL file format. Alternatively, you can grab a point cloud using a 3D sensor and remove background objects from the scan (for example, using M3dimCrop() to crop points and/or M3dmetFit() to remove a background plane from the point cloud). Typically, a CAD model contains all surfaces of the object. However, a surface model obtained from a 3D sensor might require multiple scans to fully represent all sides. For example, if the top surface of an object differs from the bottom surface, you must scan twice to capture each opposing side. Resolution compensation might be required if the model and target scene don't have the same scanning conditions. For more information, see the Model and target point cloud resolution subsection of the Search settings specific to surface models section later in this chapter. A surface occurrence's found position is determined by the model's reference axis; position results return the coordinates of the model's reference axis origin transformed at the model occurrence. By default, the origin of the model's reference axis is at the origin of the working coordinate system of the original point cloud from which the surface model was defined. This does not necessarily correspond to the center of the model. When adding the model using M3dmodDefine(), you can move the origin of the working coordinate system to the required position. If you want to change the position of the reference axis origin later, you can do so using M3dmodControl() with M_SET_POSITION_.... When adding the model using M3dmodDefine() (or later using M3dmodControl() with M_REMOVE_OUTLIERS), you can also specify that outliers are removed. When enabled, MIL removes outliers such as clusters of points around the perimeter of the model. Enable outlier removal if the model contains stray points, especially if refine registration (M_REFINE_REGISTRATION) is enabled. The default for this control type is set when adding the surface model to the context using M3dmodDefine() with M_SURFACE. Note that you should not enable outlier removal if your model was defined from a CAD-sourced point cloud (using MbufImport() / MbufRestore()) since parts of the model can be removed, which can cause the search to fail/return false positives. Also note that you can use M3dimOutliers() to remove outlier points from the source point cloud before adding the model to the find surface 3D model finder context. MIL uses the features of the surface model and the target point cloud to find occurrences, but by default, it doesn't do any fitting. To get more accurate score and pose information, you should enable refine registration (M_REFINE_REGISTRATION). When enabled, 3D registration is internally performed between the model and each of the found occurrences. See the Fit refinement subsection of the Search settings specific to surface models section later in this chapter to learn more. Defining and adding models to your 3D model finder context Geometric-type models Nominal versus range-type geometric models Ways to define a geometric model Models defined from specified numeric constraints Models defined from specified 3D geometries Surface models ",
      "wordCount": 1280,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Determining_what_is_a_match",
      "version": null,
      "title": "Determining what is a match",
      "subTitles": [
        "Score",
        "Reserved points"
      ],
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Determining_what_is_a_match.htm",
      "text": " Determining what is a match Before customizing your search settings, it is necessary to understand how a match between your model and occurrences in the point cloud is determined. The score (M_SCORE) is the primary factor in determining which occurrences are considered matches with the model in your 3D model finder context. Score The score is a measure of how well an occurrence matches a model. It is defined as the model coverage, which is the percentage of the model's surface found in the occurrence and covered by inlier points. When you specify your search settings using M3dmodControl(), use M_ACCEPTANCE to set the acceptance value for the score. The score is defined relative to the maximum expected model coverage, such that an occurrence with a score of 100% has a model coverage equal to the maximum expected model coverage. You can set the maximum expected model coverage, using M3dmodControl() with M_COVERAGE_MAX. You can also set the certainty level with M_CERTAINTY. An occurrence will be returned only if its score is greater than or equal to the acceptance value; however, an occurrence with a score greater than or equal to the certainty level is considered a certain match. For more information on the uses of the acceptance and certainty levels, refer to the Customizing search settings section later in this chapter. You can retrieve the score of an occurrence, using M3dmodGetResult() with M_SCORE. The following image shows a point cloud with a cylinder occurrence. The bounding box, inlier points, and geometric shape of the model have all been drawn at the location of the occurrence, using M3dmodDraw3d(). The maximum expected coverage is set to 40%, and the acceptance level is set to 50%. Given that the inlier points sufficiently cover the model's surface at the location of this occurrence, it is returned as a valid occurrence. To determine which points belong to a certain occurrence, you can set a fit distance, using M3dmodControl() with M_FIT_DISTANCE, which specifies a point's maximum distance from the geometric shape of the model at the occurrence for inclusion in the occurrence. A point must be within the fit distance of the model's shape at the location of the occurrence to be considered an inlier. Use M3dmodControl() with M_FIT_DISTANCE_MODE to specify how MIL establishes the fit distance; by default, it is calculated automatically for geometric models, but you can also explicitly set the fit distance. Note that the fit score calculation is not automatically enabled for surface models. To retrieve the fit score and to specify the fit distance, see the Fit score and maximum fit distance subsection of the Search settings specific to surface models section later in this chapter. Also note that while a larger fit distance will generally improve an occurrence's score, since more included points will improve the model coverage, it will also generally increase the RMS error. Note that M3dmodFind() can fail to find an occurrence if it contains a very small number of inlier points amid a very large number of irrelevant background points. Reserved points MIL defines a region around every occurrence in which points are deemed reserved points, and cannot be considered part of any other occurrence. Note that reserved points are not included when calculating the score. MIL reserves points both to ensure that multiple occurrences are not found in the same region, and to speed up the search for subsequent occurrences. Once identified, reserved points are ignored as MIL searches for more occurrences. You can draw the reserved points of each specified occurrence for all model types by first calling M3dmodControlDraw() with M_DRAW_RESERVED_POINTS and then calling M3dmodDraw3d(). For cylinder and sphere models, you can specify the distance from an occurrence to consider the reserved area. Points found in this area are considered reserved. By default, this is 10% of the occurrence's radius, but you can set it to any percentage of the occurrence's radius using M3dmodControl() with M_RESERVED_POINTS_DISTANCE. Note that if you define a cylinder model with bases (M3dmodDefine() with M_CYLINDER or M_CYLINDER_RANGE, and M_WITH_BASES), any points found on the bases of occurrences will be considered reserved. Points on an occurrence's bases will therefore not affect the score whether or not the model includes bases. However, if you expect cylindrical occurrences with bases, you should still define your cylinder model with bases. By reserving points on the bases of found occurrences, MIL decreases the search time for subsequent occurrences, since fewer points remain through which to search. You can also use M3dmodControl() with M_BASES to set whether your cylinder model includes bases. Note that, just like when adding or deleting a model from your find 3D model finder context using M3dmodDefine(), changing the settings of a find 3D model finder context or model using M3dmodControl() requires preprocessing the context again, using M3dmodPreprocess(), before performing a new search. Determining what is a match Score Reserved points ",
      "wordCount": 810,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Customizing_search_settings_general",
      "version": null,
      "title": "Customizing search settings",
      "subTitles": [
        "Maximum expected coverage",
        "Acceptance level",
        "Certainty level",
        "Expected number of occurrences"
      ],
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Customizing_search_settings_general.htm",
      "text": " Customizing search settings With successive calls to M3dmodControl(), you can customize the search settings of the 3D model finder context or of the model in the 3D model finder context. You can inquire about any 3D model finder context setting or individual model setting using M3dmodInquire(). Fundamental model search settings include the maximum expected model coverage, the acceptance and certainty levels (which determine what is considered a match), and the expected number of occurrences to find. For model-type specific search settings, see the Search settings specific to geometric models section later in this chapter and the Search settings specific to surface models section later in this chapter. Most of the model search settings can affect the speed and robustness of your application. It is recommended that you begin with the default settings, and then, as your application demands, adjust the individual settings as required. Note that changing control type settings of a find 3D model finder context or model requires preprocessing the context again, using M3dmodPreprocess(). Maximum expected coverage The model coverage is the percentage of the model's surface covered with inlier points found in the occurrence. The model coverage of an occurrence defines its score. You can set the maximum expected model coverage, using M3dmodControl() with M_COVERAGE_MAX. Note that the default maximum expected coverage is model specific. Cylinder and sphere models have a default maximum expected coverage of 45%, whereas box, rectangular plane, and surface models have a default maximum expected coverage of 100%. An occurrence found with a coverage greater than or equal to the maximum expected coverage will have a score of 100%. To learn more about maximum expected coverage and how the score is calculated, see the Score subsection of the Determining what is a match section earlier in this chapter. Acceptance level The acceptance level determines the minimum score required for an occurrence to be considered a match. The acceptance level is defined relative to the maximum expected model coverage, such that setting M_ACCEPTANCE to 50% indicates that returned occurrences must have a total model coverage greater than or equal to half the value of M_COVERAGE_MAX. You can use M3dmodControl() with M_ACCEPTANCE to set the acceptance level. MIL will search your point cloud for the required number of occurrences, returning the occurrences with the best scores greater than or equal to the acceptance level. If the score of an occurrence is less than the specified acceptance level, it is not considered a match and is not returned as an occurrence. For example, setting M_ACCEPTANCE and M_COVERAGE_MAX to 100% means that you will only accept occurrences containing model surfaces that are completely covered. That is, valid inlier points cover the entirety of the model's surface at the location of the occurrence. Perfect matches are generally unobtainable in real 3D scenes because of noise and distortion introduced when grabbing 3D data. You should use a reasonable acceptance level that is high enough to avoid false matches, but not so high that occurrences are missed. If your point clouds have considerable noise and/or distortion, or if occlusion of occurrences is expected, you might have to set the acceptance level below the default value of 60%. Certainty level The certainty level is used to speed up the search when very good matches are expected often. You can set the certainty level for the score of a specified model using M3dmodControl() with M_CERTAINTY (the default setting is 90%). Any occurrence whose score is greater than or equal to the certainty level is considered a certain match. The certainty level is defined relative to the maximum expected model coverage, such that setting M_CERTAINTY to 100% indicates that certain matches must have a total model coverage equal to the maximum expected model coverage. The certainty level determines the score above which (or equal to) the algorithm can assume that it has found a certain match. If you specify the number of expected occurrences, using M3dmodControl() with M_NUMBER, the search will end as soon as the module finds an amount of certain matches equal to the number to which you set M_NUMBER, without searching the rest of the point cloud for better matches. If no certain matches are found, MIL will search the entire point cloud and return the matches with the highest scores greater than or equal to the acceptance level. If necessary, when searching for a fixed number of occurrences in a point cloud, you can ensure that MIL always returns those occurrences with the highest match score among those found, by setting the certainty level of the model to 100%. MIL will return occurrences with the best score(s) greater than or equal to the acceptance or those with scores of 100%. Note that doing so will probably increase the search time. Expected number of occurrences You can set the expected number of occurrences for the model in your 3D model finder context. To do so, use M3dmodControl() with M_NUMBER. The default value is 1. To find all occurrences of a model, set M_NUMBER to M_ALL. Note that setting the number of occurrences to M_ALL can significantly slow the M3dmodFind() operation, depending on the complexity of your point cloud. It is recommended that you specify the exact number of expected occurrences whenever possible. Once the number of occurrences for the model has been found, with scores greater than or equal to the certainty level, the search will stop. If there are fewer certain matches than the specified expected number of occurrences, the search will continue until the best matches with the highest scores greater than or equal to the acceptance level are found. Customizing search settings Maximum expected coverage Acceptance level Certainty level Expected number of occurrences ",
      "wordCount": 948,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Search_settings_specific_to_geometric_models",
      "version": null,
      "title": "Search settings specific to geometric models",
      "subTitles": [
        "Sphere models",
        "Maximum fit iterations",
        "Rectangular plane models",
        "Normals",
        "Elongation",
        "Box models",
        "Number of visible planes",
        "Reference direction",
        "Completion size when a single box face is found",
        "Acceptance level, certainty level, and model coverage for individual faces",
        "Normals",
        "Elongation"
      ],
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Search_settings_specific_to_geometric_models.htm",
      "text": " Search settings specific to geometric models Besides the search settings mentioned in the Customizing search settings section earlier in this chapter, there are search settings specific to geometric models. Note that changing control type settings of a find 3D model finder context or model requires preprocessing the context again, using M3dmodPreprocess(). Sphere models For sphere models, you can also specify the number of fit iterations. Maximum fit iterations When searching a point cloud for sphere occurrences, you can set the maximum number of fit iterations to perform. Performing more iterations improves the accuracy of the fit, but will increase the search time. By default, MIL performs one fit iteration, but you can call M3dmodControl() with M_FIT_ITERATIONS_MAX to set the maximum number of fit iterations to any integer value. The default value of one fit iteration is often enough to find a sphere occurrence; however, if you need very accurate results, you should increase the maximum number of fit iterations to perform. Rectangular plane models For rectangular plane models, you can also specify the normal and elongation of the rectangular plane. Rectangular planes are typically found throughout the scene, so customizing these settings can help to ensure that the correct rectangular plane occurrences are matched. Normals Using M3dmodControl() with the M_NORMAL_... control types, you can select the angle at which to find rectangular plane occurrences. You can restrict rectangular plane occurrences to only those whose normal satisfies the specified condition relative to a specified vector, within a certain tolerance. Set M_NORMAL_CONDITION to the condition that rectangular plane occurrences must satisfy to be returned as a match. The default is M_UNCONDITIONAL, in which case there is no constraint on the normal of the rectangular plane. You can specify to only match rectangular plane occurrences whose normal is parallel (M_PARALLEL), perpendicular (M_PERPENDICULAR), or parallel or perpendicular (M_PARALLEL_OR_PERPENDICULAR) to the vector (M_NORMAL_X, M_NORMAL_Y, M_NORMAL_Z). In addition, you can also set an angular tolerance (M_NORMAL_ANGLE_TOLERANCE). MIL only returns the occurrence as a match if the normal of the rectangular plane meets the specified M_NORMAL_CONDITION, +/- the specified angular tolerance, relative to the vector M_NORMAL_...; the default is 10.0 degrees. Elongation When searching for rectangular plane occurrences that have a very large size range, you can set the minimum (M_ELONGATION_MIN) and maximum (M_ELONGATION_MAX) elongation of the rectangular plane occurrence using M3dmodControl(). The elongation is defined as the maximum side/minimum side of the rectangular plane occurrence, and it is used to prevent lines from being incorrectly identified as rectangular planes. By default, the minimum elongation is 1.0 and maximum elongation is infinitely long. Box models For box models, you can also specify the normal and elongation of the box, the number of visible planes, the reference direction and completion sizes when a single box face is found, and the plane acceptance level, certainty level, and model coverage for individual faces. This section describes settings that you should change to ensure the correct box occurrences are found. It is important to customize these settings to suit your application. Number of visible planes Depending on the location of the 3D sensor(s) acquiring a scene, certain box faces might not be visible. When searching for box occurrences, you can search for boxes with missing faces. Using M3dmodControl() with M_NUMBER_OF_VISIBLE_FACES_MIN and M_NUMBER_OF_VISIBLE_FACES_MAX, you can specify the minimum and maximum number of visible faces (planes) required for a box occurrence to be considered a match, respectively. Note that the score will not be reduced unless the box occurrences don't have the specified number of visible faces. If a box face is acquired from a 3D sensor that is perpendicular to this face, the other faces of the box are not visible. To find these box occurrences as well, set M_NUMBER_OF_VISIBLE_FACES_MIN to 1. In this case, the reference direction (M_DIRECTION_REFERENCE_...) and the completion angle tolerance (M_COMPLETION_ANGLE_TOLERANCE) are used to determine if the plane is a box occurrence. For information on reference direction, see the Reference direction subsection of this section. Note that when only one box face is found, and the completion angular tolerance is not met, the occurrence is not returned as a match. After performing the M3dmodFind() operation, you can retrieve the number of visible faces (planes) that were used to fit the box using M3dmodGetResult() with M_NUMBER_OF_VISIBLE_FACES. Reference direction When M_NUMBER_OF_VISIBLE_FACES_MIN is set to 1, you should set the reference direction. The reference direction is used to identify the location of the 3D sensor when it acquired the target point cloud. If a box face is acquired from a 3D sensor perpendicular to this face, the other faces of the box will not be visible. In other words, the reference direction should match the position of your 3D sensor or the direction of the 3D sensor's line of sight. To set the reference direction and the direction in which to extrude boxes, use M3dmodControl() with M_DIRECTION_MODE. There are several ways to specify the direction mode: If the exact position of the 3D sensor is known and you want to extrude the box in the direction of the 3D sensor's line of sight, set M_DIRECTION_MODE to M_AWAY_FROM_POSITION, and then set M_DIRECTION_REFERENCE_X, M_DIRECTION_REFERENCE_Y, and M_DIRECTION_REFERENCE_Z to the 3D sensor's position. If only the direction of the 3D sensor's line of sight is known and you want to extrude the box in this direction, set M_DIRECTION_MODE to M_TOWARDS_DIRECTION, and then set M_DIRECTION_REFERENCE_X, M_DIRECTION_REFERENCE_Y, and M_DIRECTION_REFERENCE_Z to the components of the vector that points in this direction. If the exact position of the 3D sensor is known and you want to extrude the box against the direction of the 3D sensor's line of sight, set M_DIRECTION_MODE to M_TOWARDS_POSITION, and then set M_DIRECTION_REFERENCE_X, M_DIRECTION_REFERENCE_Y, and M_DIRECTION_REFERENCE_Z to the 3D sensor's position. This direction mode is typically not used. Completion size when a single box face is found When M_NUMBER_OF_VISIBLE_FACES_MIN is set to 1, a box can be extruded from a single plane. In this case, when only one box face (plane) is found and the completion angular tolerance is met, MIL compares the plane's two dimensions (length and width) to the specified X, Y, and Z completion sizes (M_COMPLETION_SIZE_...); the most dissimilar size determines the missing dimension along which MIL extrudes the visible face to complete the box. MIL can attempt to extrude the visible face to a background plane, a staircase plane, or the specified completion size for the missing dimension; use M_COMPLETION_TO_BACKGROUND, M_COMPLETION_TO_STAIRCASE, M_COMPLETION_TO_USER_SIZE, respectively, to enable extrusion to these. When more than 1 completion method is enabled, MIL will attempt to complete the box in the following order: If M_COMPLETION_TO_BACKGROUND is enabled, the visible face can be extruded to a background plane to complete the box. MIL will attempt to extrude the face to the closest background plane (includes planes found in the scene or copied to the find box 3D model finder context using M3dmodCopy() with M_FLOOR) that intersects with the projection of the face and falls inside the size range for the missing dimension (for example, for range-type models, M_SIZE_..._MIN to M_SIZE_..._MAX). Note that the background plane must intersect with at least 80% of the projection of the face. If the closest background plane would yield an extrusion smaller than M_SIZE_..._MIN, the face cannot be extruded. In this case, no other completion methods will be attempted and the box is rejected. If no background plane intersects with the projection of the face, or the closest background plane is too far to complete the box, MIL will attempt to complete the box using the next available completion method. If M_COMPLETION_TO_STAIRCASE is enabled, the visible face can be extruded to a staircase plane to complete the box. A staircase plane is any plane found in the scene or copied to the find box 3D model finder context using M3dmodCopy() with M_FLOOR whose edge touches the extrusion of the face (if the box were extruded to this plane, the two would seem like a staircase). MIL will attempt to extrude the face to the staircase plane that yields the largest extrusion (farthest) within the specified size constraints of the model. If no staircase plane exists within the allowable distance, the next available completion method is used. If M_COMPLETION_TO_USER_SIZE is enabled, MIL will extrude the face to the completion size of the missing dimension (most dissimilar) to complete the box. Note that the completion sizes refer to the box model's dimensions and are not related to the axes of the working coordinate system. Acceptance level, certainty level, and model coverage for individual faces Besides setting the acceptance level, certainty level, and model coverage for the entire occurrence, you can specify these settings for the individual faces of a box occurrence: Plane acceptance level (M_PLANE_ACCEPTANCE): A plane will only be considered a visible face of the box occurrence if its score is greater than or equal to the defined plane acceptance level. Plane certainty level (M_PLANE_CERTAINTY): If the score of a plane is greater than or equal to the specified plane certainty level, the plane is considered a visible face of the box without searching for better faces. Plane maximum expected coverage (M_PLANE_MAX_COVERAGE): A face (plane) with a coverage greater than or equal to the specified plane maximum expected coverage has a score of 100%. To detect very occluded faces, you can set M_PLANE_ACCEPTANCE, M_PLANE_CERTAINTY, and M_PLANE_MAX_COVERAGE to low values while maintaining high values for their equivalent whole box occurrence settings: M_ACCEPTANCE, M_CERTAINTY, and M_COVERAGE_MAX. Normals Much like rectangular plane models, you can also set normal constraints for box models. A box occurrence is only considered a match if the normal of one of its faces meets the specified parallel condition (M_NORMAL_CONDITION) when compared to the vector specified with M_NORMAL_... (within the specified tolerance M_NORMAL_ANGLE_TOLERANCE). The default normal condition is M_UNCONDITIONAL. See the Normals subsubsection of the Rectangular plane models subsection to learn more. For example, if your scene has boxes that sit flat on the floor (that is, axis-aligned with the XY-plane and parallel to the Z-axis) and boxes that are at an angle from the floor, you can set the vector M_NORMAL_... to the positive Z-axis (0.0, 0.0, 1.0) and set the normal condition to M_PARALLEL to only match box occurrences that sit on the floor. You can also specify to only match box occurrences if the normal of one of its visible faces is parallel (M_VISIBLE_FACE_PARALLEL) to the vector. In other words, the face cannot be inferred. For example, if you set M_NORMAL_... to the positive Z-axis (0.0, 0.0, 1.0) and the face whose normal is parallel to the Z-axis is not visible, then the box occurrence will not be matched. Elongation When searching for box occurrences that have a very large size range, you can set the minimum (M_ELONGATION_MIN) and maximum (M_ELONGATION_MAX) elongation of the box occurrence using M3dmodControl(). The elongation is defined as the maximum side/minimum side of any face of the box occurrence, and it is used to prevent lines from being incorrectly identified as boxes. By default, the minimum elongation is 1.0 and maximum elongation is infinitely long. Search settings specific to geometric models Sphere models Maximum fit iterations Rectangular plane models Normals Elongation Box models Number of visible planes Reference direction Completion size when a single box face is found Acceptance level, certainty level, and model coverage for individual faces Normals Elongation ",
      "wordCount": 1877,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Search_settings_specific_to_surface_models",
      "version": null,
      "title": "Search settings specific to surface models",
      "subTitles": [
        "Fit refinement ",
        "Scene complexity and perseverance",
        "Model and target point cloud resolution",
        "Simplifying the scene",
        "Obtaining the most accurate model representation for score and fit",
        "Scene projection",
        "Constraining results",
        " Target acceptance and extra points in the occurrences",
        "Color score",
        "Fit score and maximum fit distance",
        "Resting plane and occurrence orientation"
      ],
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Search_settings_specific_to_surface_models.htm",
      "text": " Search settings specific to surface models Besides the search settings mentioned in the the Customizing search settings section earlier in this chapter, there are search settings specific to surface models. Note that changing control type settings of a find 3D model finder context or model requires preprocessing the context again, using M3dmodPreprocess(). Fit refinement After finding occurrences of a surface model, you can have M3dmodFind() refine the fit of the model to get more accurate score and pose information of the occurrence. By default, for a surface model, MIL uses the features of the model and target to find occurrences, but it doesn't do any fitting. To get more accurate score and pose information, you should enable refine registration. When enabled, 3D registration is internally performed between the model and each of the found occurrences. You can set M_REFINE_REGISTRATION to use a predefined or a custom registration context. There are two predefined 3D registration contexts: M_FIND_SURFACE_REFINEMENT_FAST, which prioritizes performance. M_FIND_SURFACE_REFINEMENT_PRECISE, which prioritizes accuracy and can take longer. If the predefined 3D registration contexts don't meet your needs, you can set M_REFINE_REGISTRATION to M_USER_DEFINED_REGISTRATION. Then, you can inquire the identifier of the internal registration context using M3dmodInquire() with M_USER_DEFINED_REGISTRATION_CONTEXT_ID, and use M3dregControl() to configure the context. You can also use M3dmodCopy() with M_REFINE_REGISTRATION to initialize the internal context with the settings of a predefined registration context and then adjust a few settings using M3dregControl(). To retrieve the status of the refine registration, you can use M3dmodGetResult() with M_STATUS_REFINE_REGISTRATION. To calculate and retrieve the root-mean square (RMS) error and the fit score of the occurrences, you must enable M_SAVE_FIT_INFO. For more information, see the Fit score and maximum fit distance subsection of this section. Scene complexity and perseverance For a find surface 3D model finder context, you can specify the complexity of the target scene. For the model, you can also specify the perseverance to use to find occurrences. Information about the complexity of the scene is used to know how much of the target data belongs to occurrences. To specify the scene complexity, use M3dmodControl() with M_SCENE_COMPLEXITY. The default value is M_MEDIUM. For example, if the target scene contains one occurrence of the model on a simple background, setting M_SCENE_COMPLEXITY to M_LOW should be sufficient to find the occurrence. Whereas, if the target scene is busy and contains many features similar to the model, you should set M_SCENE_COMPLEXITY to M_MEDIUM or M_HIGH. Higher settings result in a more robust operation, but typically take more time. Perseverance affects the number of times the algorithm tries to find occurrences before giving up. You can set the algorithm's search perseverance using M3dmodControl() with M_PERSEVERANCE. The default value is 20.0. Increasing perseverance allows the algorithm to search the target scene more extensively and ensures multiple searches are performed to find a possible match. When looking at your scene, you should generally first define scene complexity to reflect your objects of interest and then tweak perseverance to compensate for a poorly defined model (for example, it has multiple areas that look alike), a target that is complex, similar objects in the scene, the search not finding the expected number of occurrences, or when increasing the setting of M_SCENE_COMPLEXITY is insufficient. Note that setting scene complexity to high and increasing perseverance results in a more robust operation, which might take more time. If setting scene complexity and perseverance is not sufficient, you can enable an exhaustive search using M3dmodControl() with M_EXHAUSTIVE_SEARCH. When exhaustive search is enabled, all possibilities are tried, and the perseverance setting is ignored. Model and target point cloud resolution Point cloud resolution is a measure of the point cloud's level of detail. In MIL, point cloud resolution is measured as the average distance between points. The greater the average distance between points, the lower the detail (and density). When the model point cloud and target point cloud have significantly different resolutions, matching will still happen, but MIL will notify you that the two point clouds are incompatible and that your matching can be affected by this. If the distance between points in the scene is greater than that of the model, MIL will subsample the model to match the resolution of the target. If the distance between points in the scene is lower than that of the model's, MIL will upsample the model to match the resolution of the target, using its associated mesh. If a mesh is not provided in the model, MIL will report an error when upsampling. To save time, you can prevent this by specifying the expected resolution of the scene using M3dmodControl() with M_SEARCH_POINT_RESOLUTION. By default, MIL sets the resolution of the scene to be the same as the resolution of the defined model. You can inquire the resolution of the model using M3dmodInquire() with M_MODEL_RESOLUTION, and retrieve the scene resolution compatibility using M3dmodGetResult() with M_STATUS_SCENE_RESOLUTION. If the resolutions are not compatible, you can use M3dmodControl() with M_SEARCH_POINT_RESOLUTION to specify the resolution of the scene. Note that you will need to preprocess the context again, using M3dmodPreprocess(). Simplifying the scene Background points include those of objects that are too big or too small to be part of an occurrence of the model. You should enable M3dmodControl() with M_REMOVE_BACKGROUND to remove background points for scenes that are very complex. You can use M3dmodDraw3d() to draw the points that were considered background points (control the drawing operation using M3dmodControlDraw() with M_DRAW_BACKGROUND_POINTS). Note that removing the background takes some time, but sometimes makes the match faster. For example, in the following case, enabling M_REMOVE_BACKGROUND removes the background box (in turquoise), making it easier to search for the model in the target point cloud. Obtaining the most accurate model representation for score and fit Scene projection and outlier removal can both remove points from your model. Scene projection removes the points of the model that would not be visible to the 3D sensor at the position of the occurrence before comparing the model to that occurrence for the score and fit. Outlier removal removes stray points of the model before the search begins. Typically, enabling scene projection and outlier removal will improve the score and result in a more accurate fit because extra points that would not be found in the occurrence are removed. See the Surface models subsection of the Defining and adding models to your 3D model finder context section earlier in this chapter to learn more about outlier removal. Scene projection To prevent the occurrences' scores from being lowered due to how the scene was acquired, you can enable M3dmodControl() with M_SCENE_PROJECTION. This applies occlusion handling, which happens before comparing the model to the occurrence during the refine registration and score calculation. When enabled and given the line of sight of the 3D sensor, points in the model that would be occluded at the position of an occurrence will be discarded. MIL uses the reference direction (M_DIRECTION_REFERENCE_...) to determine the line of sight and direction of projection. The default (0.0, 0.0, 1.0), provides a projection along the 3D sensor's Z-axis. For example, when your target scene has points that are not visible due to the positioning of the 3D sensor, you can enable scene projection to remove points of the model before the score is calculated. This avoids lowering M_COVERAGE_MAX too much, which can result in false positives. Constraining results To ensure that the found occurrences suit your needs, the 3D Model Finder module offers several ways to constrain the results of the search. You can set tolerances for extra points in the occurrences, color, neighboring point distances, and occurrence orientations. Target acceptance and extra points in the occurrences Besides setting the minimum model score (M_ACCEPTANCE), you can set the target acceptance level using M_ACCEPTANCE_TARGET, which sets the minimum target score. The target score is a measure, as a percentage, of the total points found in the occurrence that are not found in the model. A setting of 100% for the target score means that you will not tolerate any extra points; all points in the occurrence must have a matching point in the model. A setting of 0% (default) allows for any number of extra points. Essentially, the target score acceptance level allows you to control how tolerant your search is to details not present in the original model. Color score The color score is a measure, as a percentage, of the similarity between the color data of the model and the color data of the target. Note that by default, MIL does not calculate the color score. You must enable M3dmodControl() with M_USE_COLOR to calculate and obtain this result (using M3dmodGetResult() with M_SCORE_COLOR). When enabled, besides being able to obtain the color score, you can specify the minimum color score required for an occurrence to be considered a match (using M3dmodControl() with M_ACCEPTANCE_COLOR). MIL will only return occurrences with a color score greater than or equal to the color acceptance level. The following example shows the occurrences found when M_USE_COLOR is enabled and M_ACCEPTANCE_COLOR is set to 0% compared to 50%. The model is similar in shape to all 7 objects in the target, but only 3 of them have similar color data. Note that you can sort the results based on their color score (M_SCORE_COLOR) with M_SORT. Fit score and maximum fit distance By default, MIL does not calculate the root-mean square (RMS) error and the fit score; you need to enable M3dmodControl() with M_SAVE_FIT_INFO to obtain these results (using M3dmodGetResult() with M_RMS_ERROR and M_SCORE_FIT). When enabled, besides being able to obtain these results, you can filter out occurrences based on the minimum required fit score (M_FIT_SCORE_MIN) and the maximum fit distance (M_FIT_DISTANCE_MODE and M_FIT_DISTANCE). In addition, you can sort the results based on their fit score (M_SCORE_FIT) with M_SORT. Note that M_SAVE_FIT_INFO and its related settings have no effect on M_REFINE_REGISTRATION, and vice versa. Even if refine registration is enabled, you must enable M_SAVE_FIT_INFO to calculate and retrieve the root-mean square (RMS) error and the fit score. Resting plane and occurrence orientation The resting plane is used to provide contextual information about how the model occurrence lies within the scene. When matching, MIL considers all poses of the occurrence. You can, however, specify a resting plane so that MIL only considers occurrences that sit on this plane. This does not affect any of the scores, but it filters occurrences that do not meet this constraint. Note that defining a resting plane does not decrease the search time because occurrences are filtered near the end of the search. To define constraints on the occurrence's position, you will need to identify the resting plane of the model by copying a corresponding plane to the model using M3dmodCopy() with M_RESTING_PLANE. Note that to use a resting plane, you must also copy a floor plane (M_FLOOR) to the find surface 3D model finder context; the floor plane denotes the base of the scene. The resting plane uses the floor plane as a reference when establishing the tilt angle of the occurrence. To inquire the number of resting planes defined, use M3dmodInquire() with M_NUMBER_RESTING_PLANE. By default, MIL will only return occurrences that rest on the plane, +/- 10.0 degrees, since the found angle is not always exact. You can change the resting plane angular tolerance using M3dmodControl() with M_RESTING_PLANE_ANGLE_TOLERANCE. The tolerance value is relative to the model's resting plane. You should set a larger resting plane angular tolerance if you expect the occurrences to be at different angles. Search settings specific to surface models Fit refinement Scene complexity and perseverance Model and target point cloud resolution Simplifying the scene Obtaining the most accurate model representation for score and fit Scene projection Constraining results Target acceptance and extra points in the occurrences Color score Fit score and maximum fit distance Resting plane and occurrence orientation ",
      "wordCount": 1965,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_Retrieving_and_drawing_results",
      "version": null,
      "title": "Retrieving and drawing results",
      "subTitles": [
        "Possible results",
        "Drawing results"
      ],
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\Retrieving_and_drawing_results.htm",
      "text": " Retrieving and drawing results After successfully locating model occurrences in your point cloud using M3dmodFind(), you can extract the required results from your 3D model finder result buffer using M3dmodGetResult() and M3dmodCopyResult(). Possible results You can retrieve several types of results with the 3D Model Finder module. These results provide considerable information on the nature of the occurrence(s) found. In addition to general information about the search, such as the number of occurrences found, the status of the last M3dmodFind() operation, the maximum fit distance used during the search, and the size of the point cloud's range component, you can retrieve the following results for each found occurrence: Score, which is based on the occurrence's points coverage of the model. Root-mean-square error between the occurrence's points and the model. Number of points. Center point coordinates. Radius. Note that certain result types are supported only with certain types of models; the following results are available only for cylinder model occurrences: Length. X-, Y-, and Z-components of the central axis unit vector. X-, Y-, and Z-coordinates of the center of each base. Results are returned in descending order of match score, such that the result with the highest score is returned first. Generally, you should first retrieve the total number of occurrences found for the model in the 3D model finder context, to ascertain the size of the result array needed. For a complete description of all possible results, refer to the description of M3dmodGetResult() in the MIL Reference. Occurrences are indexed with positive integers starting from 0. Drawing results The M3dmodControlDraw() function provides several operations for drawing results into a 3D graphics list; for each occurrence, you can draw: The geometric shape or surface of the defined model at the location of the occurrence. The bounding box. The inlier points. The reserved points. Note that the bounding box is the smallest axis-aligned box that contains the geometric shape or surface of the model at the location of an occurrence, depending on the model type. If you draw the geometric shape or surface of the defined model at the location of the occurrence and the bounding box, then the bounding box will be the smallest-axis aligned box that fully contains the drawn shape or surface of the model. It does not necessarily contain all inlier points. For example, if you specify a very large maximum fit distance to use during the search, your occurrences can include inlier points that are far from the geometric shape or surface of the model. They will therefore not be enclosed by the bounding box. You can also specify how to draw the above graphics with successive calls to M3dmodControlDraw(). For example, you can set the color for each type of drawn graphic. You can also set the thickness of the outline of the bounding box, and whether it appears as a solid surface, a wireframe, or as points. For a complete description of all possible options for the draw, refer to the description of M3dmodControlDraw() in the MIL Reference. Note that points are represented as squares in a 3D display. You can specify the thickness of inlier or reserved points in number of pixels, and they will always be shown with sides of this length when displayed, regardless of their distance from the 3D display's viewpoint. To perform a draw operation, you typically allocate a draw 3D model finder context to hold the settings for the draw, using M3dmodAlloc() with either M_DRAW_3D_GEOMETRIC_CONTEXT for geometric draw contexts or M_DRAW_3D_SURFACE_CONTEXT for surface draw contexts. You then specify draw operations and options for the draw with successive calls to M3dmodControlDraw(). Finally, you call M3dmodDraw3d() to perform the draw. Alternatively, you can skip allocating a draw 3D model finder context and instead use a default draw 3D model finder context with default draw settings. To do so, directly call M3dmodDraw3d() with M_DEFAULT. Note that the default settings specify to draw the geometric shape of the defined model at the location of the occurrence, the bounding box, and the inlier points of each found occurrence, with a default point thickness of one pixel and a default wireframe bounding box appearance. Retrieving and drawing results Possible results Drawing results ",
      "wordCount": 699,
      "subEntries": []
    },
    {
      "id": "UG_3D_Model_finder_3D_Model_finder_example",
      "version": null,
      "title": "3D model finder example",
      "subTitles": null,
      "location": "MIL UG P05: 3D processing and analysis",
      "pageURL": "content\\UserGuide\\3D_Model_finder\\3D_Model_finder_example.htm",
      "text": " 3D model finder example The following MIL examples illustrate applications of the 3D Model Finder module, namely, defining and finding occurrences of surface, rectangle, box, cylinder or sphere models in a point cloud. The example surfacefinder.cpp defines a surface model and searches for occurrences of it in a point cloud. To view this example, refer to the following: surfacefinder.cpp The example rectangleandboxfinder.cpp defines a rectangle model and a box model and searches for occurrences of it in a point cloud. To view this example, refer to the following: rectangleandboxfinder.cpp The example cylinderfinder.cpp defines a cylinder model and searches for occurrences of it in a point cloud. To view this example, refer to the following: cylinderfinder.cpp The example spherefinder.cpp defines a sphere model and searches for occurrences of it in a point cloud. To view this example, refer to the following: spherefinder.cpp To run these examples, use the Matrox Example Launcher in the MIL Control Center. 3D model finder example ",
      "wordCount": 161,
      "subEntries": []
    }
  ]
}]