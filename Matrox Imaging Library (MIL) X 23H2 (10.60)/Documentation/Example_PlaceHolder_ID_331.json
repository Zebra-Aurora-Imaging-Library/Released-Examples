[{
  "id": "Example_PlaceHolder_ID",
  "version": "2024020714",
  "title": "Example_PlaceHolder_Title",
  "wordCount": 0,
  "subEntries": [
    {
      "id": "Examples_General_MdispWPF_CS_MdispWPF_app_xaml",
      "version": "2024020714",
      "title": "app.xaml",
      "location": "Sample Code from MIL Examples",
      "text": " Top /* * File name: App.xaml.cs * Location: See Matrox Example Launcher in the MIL Control Center * */ using System; using System.Collections.Generic; using System.Configuration; using System.Data; using System.Linq; using System.Windows; //******************************************************************************** // Copyright (C) Matrox Electronic Systems Ltd., 1992-2024. // All Rights Reserved //******************************************************************************** namespace MdispWPF { /// &lt;summary&gt; /// Interaction logic for App.xaml /// &lt;/summary&gt; public partial class App : Application { } } ",
      "wordCount": 68
    },
    {
      "id": "Examples_General_MdispWPF_CS_MdispWPF_mainwindow_xaml",
      "version": "2024020714",
      "title": "mainwindow.xaml",
      "location": "Sample Code from MIL Examples",
      "text": " Top /* * File name: MainWindow.xaml.cs * Location: See Matrox Example Launcher in the MIL Control Center * */ using System; using System.ComponentModel; using System.Windows; using MILApplicationLibrary; //******************************************************************************** // Copyright (C) Matrox Electronic Systems Ltd., 1992-2024. // All Rights Reserved //******************************************************************************** namespace MdispWPF { /////////////////////////////////////////////////////////////////////////////////////////////// /// &lt;summary&gt; /// Interaction logic for MainWindow.xaml /// &lt;/summary&gt; public partial class MainWindow : Window { /////////////////////////////////////////////////////////////////////////////////////////////// /// &lt;summary&gt; /// Creates a new instance of the MainWindow object, /// &lt;/summary&gt; public MainWindow() { InitializeComponent(); } /////////////////////////////////////////////////////////////////////////////////////////////// /// &lt;summary&gt; /// Event handler : Called when the window is loaded. /// &lt;/summary&gt; /// &lt;param name=\"sender\"&gt;The object sending this event, in this case, the MainWindow.&lt;/param&gt; /// &lt;param name=\"e\"&gt;A &lt;see cref=\"RoutedEventArgs\"/&gt; object providing state information and event data associated with this routed event.&lt;/param&gt; private void Window_Loaded(object sender, RoutedEventArgs e) { try { // Instanciate a new MILApplication object. MILApplication application = new MILApplication(); // Allocate the MIL application. application.Allocate(); // Set the MILApplication object as the DataContext for this window objet. // This will enable data bindings between the window and the MILApplication object. DataContext = application; // Mark the routed event as handled. e.Handled = true; } catch (Exception ex) { MessageBox.Show(ex.Message, ex.Source, MessageBoxButton.OK, MessageBoxImage.Error); } } /////////////////////////////////////////////////////////////////////////////////////////////// /// &lt;summary&gt; /// Event handler : Called when the Start Grab button is clicked. /// &lt;/summary&gt; /// &lt;param name=\"sender\"&gt;The object sending this event, in this case, the Start Grab Button.&lt;/param&gt; /// &lt;param name=\"e\"&gt;A &lt;see cref=\"RoutedEventArgs\"/&gt; object providing state information and event data associated with this routed event.&lt;/param&gt; private void StartGrab_Click(object sender, RoutedEventArgs e) { try { MILApplication milApplication = DataContext as MILApplication; if (milApplication != null) { // Start grabbing live images. milApplication.StartGrab(); // Mark the routed event as handled. e.Handled = true; } } catch (Exception ex) { MessageBox.Show(ex.Message, ex.Source, MessageBoxButton.OK, MessageBoxImage.Error); } } /////////////////////////////////////////////////////////////////////////////////////////////// /// &lt;summary&gt; /// Event handler : Called when the Stop Grab button is clicked. /// &lt;/summary&gt; /// &lt;param name=\"sender\"&gt;The object sending this event, in this case, the Stop Grab Button.&lt;/param&gt; /// &lt;param name=\"e\"&gt;A &lt;see cref=\"RoutedEventArgs\"/&gt; object providing state information and event data associated with this routed event.&lt;/param&gt; private void StopGrab_Click(object sender, RoutedEventArgs e) { try { MILApplication milApplication = DataContext as MILApplication; if (milApplication != null) { // Stop grabbing live images. milApplication.StopGrab(); // Mark the routed event as handled. e.Handled = true; } } catch (Exception ex) { MessageBox.Show(ex.Message, ex.Source, MessageBoxButton.OK, MessageBoxImage.Error); } } /////////////////////////////////////////////////////////////////////////////////////////////// /// &lt;summary&gt; /// Event handler : Called when the window is closing. /// &lt;/summary&gt; /// &lt;param name=\"sender\"&gt;The object sending this event, in this case, the MainWindow.&lt;/param&gt; /// &lt;param name=\"e\"&gt;A &lt;see cref=\"CancelEventArgs\"/&gt; object providing data about this cancelable event.&lt;/param&gt; private void Window_Closing(object sender, CancelEventArgs e) { try { MILApplication milApplication = DataContext as MILApplication; if (milApplication != null) { // Free the MILApplication to release unmananged resources. milApplication.Free(); } DataContext = null; } catch (Exception ex) { MessageBox.Show(ex.Message, ex.Source, MessageBoxButton.OK, MessageBoxImage.Error); } } } } ",
      "wordCount": 478
    }
  ]
}]