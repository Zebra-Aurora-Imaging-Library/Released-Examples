[{
  "id": "Example_PlaceHolder_ID",
  "version": "2024020714",
  "title": "Example_PlaceHolder_Title",
  "wordCount": 0,
  "subEntries": [
    {
      "id": "Examples_Core_Full_M3ddispRobustSetView_CPP_m3ddisprobustsetview_cpp",
      "version": "2024020714",
      "title": "m3ddisprobustsetview.cpp",
      "location": "Sample Code from MIL Examples",
      "text": " Top //---------------------------------------------------------------------------- // // File name: M3ddispRobustSetView.cpp // Location: See Matrox Example Launcher in the MIL Control Center // // // Synopsis: This example demonstrates how to use M3ddispSetView // in order to set the view box to the complete or robust // bounding box of a point cloud. // // Copyright (C) Matrox Electronic Systems Ltd., 1992-2024. // All Rights Reserved //---------------------------------------------------------------------------- #include &lt;mil.h&gt; //----------------------------------------------------------------------------- // Constants. //----------------------------------------------------------------------------- static MIL_STRING EARPHONES_FILE = M_IMAGE_PATH MIL_TEXT(\"3dOutlierPointsRemoval/\") MIL_TEXT(\"Earphone.ply\"); //---------------------------------------------------------------------------- // Function Declaration. //---------------------------------------------------------------------------- MIL_ID Alloc3dDisplayId (MIL_ID MilSystem ); bool CheckForRequiredMILFile(const MIL_STRING&amp; FileName); //----------------------------------------------------------------------------- // Main. //----------------------------------------------------------------------------- int MosMain() { MosPrintf( MIL_TEXT(\"[EXAMPLE NAME]\\n\") MIL_TEXT(\"M3ddispRobustSetView\\n\\n\") MIL_TEXT(\"[SYNOPSIS]\\n\") MIL_TEXT(\"This example demonstrates how to use M3ddispSetView\\n\") MIL_TEXT(\"in order to set the view box to the complete or robust\\n\") MIL_TEXT(\"bounding box a point cloud.\\n\\n\") MIL_TEXT(\"[MODULES USED]\\n\") MIL_TEXT(\"Modules used: application, system, buffer, 3D display, 3D graphics, 3D image processing.\\n\\n\")); MIL_ID MilApplication, // Application identifier. MilSystem; // System identifier. // Allocate defaults. MappAllocDefault(M_DEFAULT, &amp;MilApplication, &amp;MilSystem, M_NULL, M_NULL, M_NULL); // Check for required example files. if(!CheckForRequiredMILFile(EARPHONES_FILE)) { MappFreeDefault(MilApplication, MilSystem, M_NULL, M_NULL, M_NULL); return 0; } // Allocate the display. MIL_ID Mil3dDisplay = Alloc3dDisplayId(MilSystem); if(!Mil3dDisplay) { MappFreeDefault(MilApplication, MilSystem, M_NULL, M_NULL, M_NULL); return 0; } MIL_ID Mil3dGraList = (MIL_ID)M3ddispInquire(Mil3dDisplay, M_3D_GRAPHIC_LIST_ID, M_NULL); // Restore the point cloud from a file. MIL_ID MilContainer = MbufImport(EARPHONES_FILE, M_DEFAULT, M_RESTORE, MilSystem, M_NULL); M3dgraAdd(Mil3dGraList, M_ROOT_NODE, MilContainer, M_DEFAULT); // Get the bounding box of the point cloud and set it as the display's view box. MIL_ID MilBoundingBox = M3dgeoAlloc(MilSystem, M_GEOMETRY, M_DEFAULT, M_NULL); MIL_ID MilStatContext = M3dimAlloc(MilSystem, M_STATISTICS_CONTEXT, M_DEFAULT, M_NULL); M3dimControl(MilStatContext, M_BOUNDING_BOX, M_ENABLE); M3dimControl(MilStatContext, M_BOUNDING_BOX_ALGORITHM, M_ALL_POINTS); M3dimStat(MilStatContext, MilContainer, MilBoundingBox, M_DEFAULT); M3ddispSetView(Mil3dDisplay, M_VIEW_BOX, MilBoundingBox, M_DEFAULT, M_DEFAULT, M_DEFAULT); // Set the display's rotation axis center. This will keep the // behaviour of auto rotate consistent as we move its interest point. M3ddispCopy(M_VIEW_INTEREST_POINT, Mil3dDisplay, M_ROTATION_AXIS_CENTER, M_DEFAULT); M3ddispSelect(Mil3dDisplay, M_NULL, M_OPEN, M_DEFAULT); MosPrintf( MIL_TEXT(\"The display's view box is currently set to the full bounding box of the point cloud. \\n\") MIL_TEXT(\"Because of the presence of outlier points in the point cloud, this makes it hard to see the object properly. \\n\") MIL_TEXT(\"Press any key to set the view box to the robust bounding box. \\n\\n\")); MosGetch(); // Get the robust bounding box of the point cloud and set it as the display's view box. M3dimControl(MilStatContext, M_BOUNDING_BOX_ALGORITHM, M_ROBUST); M3dimStat(MilStatContext, MilContainer, MilBoundingBox, M_DEFAULT); M3ddispSetView(Mil3dDisplay, M_VIEW_BOX, MilBoundingBox, M_DEFAULT, M_DEFAULT, M_DEFAULT); // Set the display's rotation axis center. This will keep the // behaviour of auto rotate consistent as we move its interest point. M3ddispCopy(M_VIEW_INTEREST_POINT, Mil3dDisplay, M_ROTATION_AXIS_CENTER, M_DEFAULT); MosPrintf( MIL_TEXT(\"The display's view box is currently set to the robust bounding box of the point cloud. \\n\") MIL_TEXT(\"Now, the object is displayed at a more practical scale. \\n\") MIL_TEXT(\"Press any key to exit. \\n\\n\")); MosGetch(); // Free allocated resources. M3dimFree(MilStatContext); M3dgeoFree(MilBoundingBox); MbufFree(MilContainer); M3ddispFree(Mil3dDisplay); MappFreeDefault(MilApplication, MilSystem, M_NULL, M_NULL, M_NULL); return 0; } //----------------------------------------------------------------------------- // Allocates a 3D display and returns its MIL identifier. //----------------------------------------------------------------------------- MIL_ID Alloc3dDisplayId(MIL_ID MilSystem) { MappControl(M_DEFAULT, M_ERROR, M_PRINT_DISABLE); MIL_ID MilDisplay3D = M3ddispAlloc(MilSystem, M_DEFAULT, MIL_TEXT(\"M_DEFAULT\"), M_DEFAULT, M_NULL); MappControl(M_DEFAULT, M_ERROR, M_PRINT_ENABLE); if(!MilDisplay3D) { MosPrintf(MIL_TEXT(\"\\n\") MIL_TEXT(\"The current system does not support the 3D display.\\n\") MIL_TEXT(\"Press any key to exit.\\n\")); MosGetch(); } return MilDisplay3D; } //---------------------------------------------------------------------------- // Check for required files to run the example. //---------------------------------------------------------------------------- bool CheckForRequiredMILFile(const MIL_STRING&amp; FileName) { MIL_INT FilePresent = M_NO; MappFileOperation(M_DEFAULT, FileName, M_NULL, M_NULL, M_FILE_EXISTS, M_DEFAULT, &amp;FilePresent); if(FilePresent == M_NO) { MosPrintf(MIL_TEXT(\"The footage needed to run this example is missing. You need \\n\") MIL_TEXT(\"to obtain and apply a separate specific update to have it.\\n\\n\")); MosPrintf(MIL_TEXT(\"Press any key to end.\\n\\n\")); MosGetch(); } return (FilePresent == M_YES); } ",
      "wordCount": 580
    }
  ]
}]